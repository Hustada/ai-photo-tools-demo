
 RUN  v3.2.2 /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations
      Coverage enabled with v8

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should analyze photos and create similarity groups
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should analyze photos and create similarity groups
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should analyze photos and create similarity groups
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should analyze photos and create similarity groups
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...
[VisualSimilarity] TensorFlow analysis complete: {
  groupsFound: [33m1[39m,
  modelLoadTime: [32m'100ms'[39m,
  averageExtractionTime: [32m'50ms'[39m,
  totalExtractions: [33m2[39m,
  totalComparisons: [33m1[39m
}
[VisualSimilarity] TensorFlow filtered 2 photos to 2 candidates for API analysis
[VisualSimilarity] Layer 3: Metadata pre-filtering (PERMISSIVE mode for testing)
[VisualSimilarity] Final candidate selection: 2 photos (2 from TensorFlow, 2 from metadata)
[VisualSimilarity] Found 2 candidate photos (reduced from 2)
[VisualSimilarity] Layer 4: TensorFlow-based similarity analysis (PRIMARY)
[VisualSimilarity] TensorFlow Primary Comparison photo1 vs photo2: {
  tensorFlowSimilarity: [32m'0.800'[39m,
  threshold: [33m0.6[39m,
  passes: [33mtrue[39m,
  method: [32m'TensorFlow_ResNet_Primary'[39m,
  photo1: [32m'photo1.jpg'[39m,
  photo2: [32m'photo2.jpg'[39m
}
[VisualSimilarity] Created TensorFlow group tf-group-1750355505753-cgazymeyq with 2 photos: photo1, photo2
[VisualSimilarity] TensorFlow Group - Visual: 80.0%, Confidence: 80.0%
[VisualSimilarity] Confidence filtering: 0/1 groups above 85% threshold (85% default)
[VisualSimilarity] Filtered out low-confidence groups: tf-group-1750355505753-cgazymeyq (80.0%)
[VisualSimilarity] Multi-layer analysis complete: 1 groups found (0 exact duplicates, 0 perceptual groups, 1 TensorFlow groups)
[VisualSimilarity] Confidence filtering: 0/1 groups above 85% threshold
[VisualSimilarity] Enhanced pipeline analysis: {
  primaryEngine: [32m'Perceptual_Hash_dHash'[39m,
  secondaryEngine: [32m'TensorFlow_ResNet_Features'[39m,
  fallbackEngine: [32m'Google_Vision_Limited'[39m,
  photosAnalyzed: [33m2[39m,
  candidatesFiltered: [33m2[39m,
  exactDuplicates: [33m0[39m,
  perceptualGroups: [33m0[39m,
  tensorFlowGroups: [33m1[39m,
  filteredGroups: [33m0[39m,
  visualSimilarityThreshold: [33m0.6[39m,
  improvements: [
    [32m'Perceptual_Hashing_dHash'[39m,
    [32m'Enhanced_Cosine_Similarity'[39m,
    [32m'L2_Normalized_Vectors'[39m,
    [32m'ResNet_Features'[39m
  ]
}

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should track progress during analysis
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should track progress during analysis
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should track progress during analysis
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should track progress during analysis
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...
[VisualSimilarity] TensorFlow analysis complete: {
  groupsFound: [33m1[39m,
  modelLoadTime: [32m'100ms'[39m,
  averageExtractionTime: [32m'50ms'[39m,
  totalExtractions: [33m2[39m,
  totalComparisons: [33m1[39m
}
[VisualSimilarity] TensorFlow filtered 2 photos to 2 candidates for API analysis
[VisualSimilarity] Layer 3: Metadata pre-filtering (PERMISSIVE mode for testing)
[VisualSimilarity] Final candidate selection: 2 photos (2 from TensorFlow, 2 from metadata)
[VisualSimilarity] Found 2 candidate photos (reduced from 2)
[VisualSimilarity] Layer 4: TensorFlow-based similarity analysis (PRIMARY)
[VisualSimilarity] TensorFlow Primary Comparison photo1 vs photo2: {
  tensorFlowSimilarity: [32m'0.800'[39m,
  threshold: [33m0.98[39m,
  passes: [33mfalse[39m,
  method: [32m'TensorFlow_ResNet_Primary'[39m,
  photo1: [32m'photo1.jpg'[39m,
  photo2: [32m'photo2.jpg'[39m
}
[VisualSimilarity] Layer 4b: Optional Google Vision fallback for edge cases...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should track progress during analysis
[VisualSimilarity] Google Vision fallback generated 2 descriptions in 0ms
[VisualSimilarity] Multi-layer analysis complete: 0 groups found (0 exact duplicates, 0 perceptual groups, 0 TensorFlow groups)
[VisualSimilarity] Confidence filtering: 0/0 groups above 85% threshold
[VisualSimilarity] Enhanced pipeline analysis: {
  primaryEngine: [32m'Perceptual_Hash_dHash'[39m,
  secondaryEngine: [32m'TensorFlow_ResNet_Features'[39m,
  fallbackEngine: [32m'Google_Vision_Limited'[39m,
  photosAnalyzed: [33m2[39m,
  candidatesFiltered: [33m2[39m,
  exactDuplicates: [33m0[39m,
  perceptualGroups: [33m0[39m,
  tensorFlowGroups: [33m0[39m,
  filteredGroups: [33m0[39m,
  visualSimilarityThreshold: [33m0.98[39m,
  improvements: [
    [32m'Perceptual_Hashing_dHash'[39m,
    [32m'Enhanced_Cosine_Similarity'[39m,
    [32m'L2_Normalized_Vectors'[39m,
    [32m'ResNet_Features'[39m
  ]
}

stdout | src/components/__tests__/ScoutAiDemo.simple.test.tsx > ScoutAiDemo - Basic Functionality > Analysis Triggering > should call analyzeSimilarPhotos when trigger button clicked
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx
[companyCamService] Initializing...

stdout | src/components/__tests__/PhotoCard.test.tsx
[companyCamService] Initializing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis cancellation
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...
[VisualSimilarity] Cancelling analysis...
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stderr | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stderr | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...

stderr | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
[VisualSimilarity] Analysis failed: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarity [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useVisualSimilarity.ts:354:41[90m)[39m
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...
[VisualSimilarity] TensorFlow analysis complete: {
  groupsFound: [33m1[39m,
  modelLoadTime: [32m'100ms'[39m,
  averageExtractionTime: [32m'50ms'[39m,
  totalExtractions: [33m2[39m,
  totalComparisons: [33m1[39m
}
[VisualSimilarity] TensorFlow filtered 2 photos to 2 candidates for API analysis
[VisualSimilarity] Layer 3: Metadata pre-filtering (PERMISSIVE mode for testing)
[VisualSimilarity] Final candidate selection: 2 photos (2 from TensorFlow, 2 from metadata)
[VisualSimilarity] Found 2 candidate photos (reduced from 2)
[VisualSimilarity] Layer 4: TensorFlow-based similarity analysis (PRIMARY)
[VisualSimilarity] TensorFlow Primary Comparison photo1 vs photo2: {
  tensorFlowSimilarity: [32m'0.800'[39m,
  threshold: [33m0.98[39m,
  passes: [33mfalse[39m,
  method: [32m'TensorFlow_ResNet_Primary'[39m,
  photo1: [32m'photo1.jpg'[39m,
  photo2: [32m'photo2.jpg'[39m
}
[VisualSimilarity] Layer 4b: Optional Google Vision fallback for edge cases...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
[VisualSimilarity] Google Vision fallback generated 2 descriptions in 0ms
[VisualSimilarity] Multi-layer analysis complete: 0 groups found (0 exact duplicates, 0 perceptual groups, 0 TensorFlow groups)
[VisualSimilarity] Confidence filtering: 0/0 groups above 85% threshold
[VisualSimilarity] Enhanced pipeline analysis: {
  primaryEngine: [32m'Perceptual_Hash_dHash'[39m,
  secondaryEngine: [32m'TensorFlow_ResNet_Features'[39m,
  fallbackEngine: [32m'Google_Vision_Limited'[39m,
  photosAnalyzed: [33m2[39m,
  candidatesFiltered: [33m2[39m,
  exactDuplicates: [33m0[39m,
  perceptualGroups: [33m0[39m,
  tensorFlowGroups: [33m0[39m,
  filteredGroups: [33m0[39m,
  visualSimilarityThreshold: [33m0.98[39m,
  improvements: [
    [32m'Perceptual_Hashing_dHash'[39m,
    [32m'Enhanced_Cosine_Similarity'[39m,
    [32m'L2_Normalized_Vectors'[39m,
    [32m'ResNet_Features'[39m
  ]
}

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...
[VisualSimilarity] TensorFlow analysis complete: {
  groupsFound: [33m1[39m,
  modelLoadTime: [32m'100ms'[39m,
  averageExtractionTime: [32m'50ms'[39m,
  totalExtractions: [33m2[39m,
  totalComparisons: [33m1[39m
}
[VisualSimilarity] TensorFlow filtered 2 photos to 2 candidates for API analysis
[VisualSimilarity] Layer 3: Metadata pre-filtering (PERMISSIVE mode for testing)
[VisualSimilarity] Final candidate selection: 2 photos (2 from TensorFlow, 2 from metadata)
[VisualSimilarity] Found 2 candidate photos (reduced from 2)
[VisualSimilarity] Layer 4: TensorFlow-based similarity analysis (PRIMARY)
[VisualSimilarity] TensorFlow Primary Comparison photo1 vs photo2: {
  tensorFlowSimilarity: [32m'0.800'[39m,
  threshold: [33m0.98[39m,
  passes: [33mfalse[39m,
  method: [32m'TensorFlow_ResNet_Primary'[39m,
  photo1: [32m'photo1.jpg'[39m,
  photo2: [32m'photo2.jpg'[39m
}
[VisualSimilarity] Layer 4b: Optional Google Vision fallback for edge cases...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
[VisualSimilarity] Google Vision fallback generated 2 descriptions in 0ms
[VisualSimilarity] Multi-layer analysis complete: 0 groups found (0 exact duplicates, 0 perceptual groups, 0 TensorFlow groups)
[VisualSimilarity] Confidence filtering: 0/0 groups above 85% threshold
[VisualSimilarity] Enhanced pipeline analysis: {
  primaryEngine: [32m'Perceptual_Hash_dHash'[39m,
  secondaryEngine: [32m'TensorFlow_ResNet_Features'[39m,
  fallbackEngine: [32m'Google_Vision_Limited'[39m,
  photosAnalyzed: [33m2[39m,
  candidatesFiltered: [33m2[39m,
  exactDuplicates: [33m0[39m,
  perceptualGroups: [33m0[39m,
  tensorFlowGroups: [33m0[39m,
  filteredGroups: [33m0[39m,
  visualSimilarityThreshold: [33m0.98[39m,
  improvements: [
    [32m'Perceptual_Hashing_dHash'[39m,
    [32m'Enhanced_Cosine_Similarity'[39m,
    [32m'L2_Normalized_Vectors'[39m,
    [32m'ResNet_Features'[39m
  ]
}

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis errors gracefully
[VisualSimilarity] Starting smart analysis of 2 photos
[VisualSimilarity] Enabled layers: {
  fileHash: [33mtrue[39m,
  perceptualHash: [33mtrue[39m,
  tensorFlow: [33mtrue[39m,
  metadata: [33mtrue[39m,
  aiAnalysis: [33mtrue[39m
}
[VisualSimilarity] Layer 1: Checking for exact duplicates using file hashes...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis errors gracefully
[VisualSimilarity] Found 0 exact duplicate groups
[VisualSimilarity] Removed 0 exact duplicates, 2 photos remaining
[VisualSimilarity] Layer 1.5: Checking for near-duplicates using perceptual hashing...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis errors gracefully
[VisualSimilarity] Found 0 perceptual similarity groups
[VisualSimilarity] Perceptual hashing removed 0 near-duplicates, 2 photos remaining for TensorFlow
[VisualSimilarity] Layer 2: TensorFlow.js visual feature extraction...

stdout | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis errors gracefully
[VisualSimilarity] Extracted features for 2/2 photos
[VisualSimilarity] Finding visual similarity groups...
[VisualSimilarity] TensorFlow analysis complete: {
  groupsFound: [33m1[39m,
  modelLoadTime: [32m'100ms'[39m,
  averageExtractionTime: [32m'50ms'[39m,
  totalExtractions: [33m2[39m,
  totalComparisons: [33m1[39m
}
[VisualSimilarity] TensorFlow filtered 2 photos to 2 candidates for API analysis
[VisualSimilarity] Layer 3: Metadata pre-filtering (PERMISSIVE mode for testing)
[VisualSimilarity] Final candidate selection: 2 photos (2 from TensorFlow, 2 from metadata)
[VisualSimilarity] Found 2 candidate photos (reduced from 2)
[VisualSimilarity] Layer 4: TensorFlow-based similarity analysis (PRIMARY)
[VisualSimilarity] TensorFlow Primary Comparison photo1 vs photo2: {
  tensorFlowSimilarity: [32m'0.800'[39m,
  threshold: [33m0.98[39m,
  passes: [33mfalse[39m,
  method: [32m'TensorFlow_ResNet_Primary'[39m,
  photo1: [32m'photo1.jpg'[39m,
  photo2: [32m'photo2.jpg'[39m
}
[VisualSimilarity] Layer 4b: Optional Google Vision fallback for edge cases...

stderr | src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should handle analysis errors gracefully
[VisualSimilarity] Analysis failed: Error: API failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useVisualSimilarity.test.tsx:378:53
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runFiles [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1777:3[90m)[39m

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should set analyzing state during photo analysis
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should set analyzing state during photo analysis
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Manual Analysis Trigger > should call analyzeSimilarPhotos when trigger button clicked
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should generate suggestions when similar photos are found
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should generate suggestions when similar photos are found
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Manual Analysis Trigger > should handle multiple trigger clicks
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Manual Analysis Trigger > should handle multiple trigger clicks
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

 ❯ src/hooks/__tests__/useVisualSimilarity.test.tsx (10 tests | 4 failed) 116ms
   ✓ useVisualSimilarity > should initialize with default state 13ms
   ✓ useVisualSimilarity > should handle photo analysis with less than 2 photos 2ms
   × useVisualSimilarity > should analyze photos and create similarity groups 16ms
     → expected [] to have a length of 1 but got +0
   ✓ useVisualSimilarity > should track progress during analysis 54ms
   ✓ useVisualSimilarity > should handle analysis cancellation 4ms
   × useVisualSimilarity > should clear analysis state 5ms
     → expected { isAnalyzing: false, …(6) } to deeply equal { isAnalyzing: false, …(4) }
   × useVisualSimilarity > should get similarity score between photos 6ms
     → expected undefined to be 0.8 // Object.is equality
   × useVisualSimilarity > should get group for specific photo 4ms
     → Target cannot be null or undefined.
   ✓ useVisualSimilarity > should handle analysis errors gracefully 6ms
   ✓ useVisualSimilarity > should use custom options 5ms
 ❯ src/components/__tests__/ScoutAiDemo.simple.test.tsx (9 tests | 2 failed) 73ms
   ✓ ScoutAiDemo - Basic Functionality > Component Rendering > should render when visible is true 21ms
   ✓ ScoutAiDemo - Basic Functionality > Component Rendering > should not render when visible is false 1ms
   ✓ ScoutAiDemo - Basic Functionality > Component Rendering > should display correct photo count 4ms
   × ScoutAiDemo - Basic Functionality > Analysis Triggering > should call analyzeSimilarPhotos when trigger button clicked 18ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -90,6 +90,11 @@[90m
[2m          },[22m
[2m        ],[22m
[2m      },[22m
[2m    ],[22m
[2m    true,[22m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ ScoutAiDemo - Basic Functionality > Analysis Triggering > should disable trigger button when analyzing 4ms
   ✓ ScoutAiDemo - Basic Functionality > Analysis Triggering > should show analyzing status text when analyzing 5ms
   ✓ ScoutAiDemo - Basic Functionality > Error Handling > should display error message when error exists 5ms
   × ScoutAiDemo - Basic Functionality > Insufficient Photos > should disable trigger button when less than 2 photos 12ms
     → Unable to find an element with the text: Trigger Analysis. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"space-y-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<div>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
              [36m>[39m
                [0mScout AI[0m
              [36m</h3>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-sm text-blue-700"[39m
              [36m>[39m
                [0m1 photos loaded[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m""[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mNeed 2+ Photos[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-blue-700 text-sm"[39m
        [36m>[39m
          [0m💡 Load at least 2 photos to use Scout AI analysis[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
   ✓ ScoutAiDemo - Basic Functionality > Insufficient Photos > should show helpful message when insufficient photos 3ms
stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Auto-minimize Behavior > should auto-minimize after successful suggestions
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should display suggestion when manually triggered
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should render ScoutAiNotification for each active suggestion
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle accepting suggestions
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle accepting suggestions
[ScoutAiDemo] Accepting suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle rejecting suggestions
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle rejecting suggestions
[ScoutAiDemo] Dismissing suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle dismissing suggestions
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle dismissing suggestions
[ScoutAiDemo] Dismissing suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle viewing preview
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Suggestion Display and Interaction > should handle viewing preview
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display suggestion message in modal
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display suggestion message in modal
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/pages/__tests__/HomePage.test.tsx
[companyCamService] Initializing...

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display confidence level
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display confidence level
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display recommendation details
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display recommendation details
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Form interaction > should clear input after successful login
LoginPage: Attempting to login with API Key: test-api-k...
LoginPage: API Key stored in localStorage.
LoginPage: Navigating to /

stdout | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Login validation > should show alert when API key is empty
LoginPage: Attempting to login with API Key: ...

stderr | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Login validation > should show alert when API key is empty
LoginPage: API Key input is empty.

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display rationale
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stderr | src/components/__tests__/PhotoCard.test.tsx > PhotoCard > AI Suggestions > should not call onFetchAiSuggestions when no suitable URL is found
A suitable photo URL could not be found for AI suggestions.

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should display rationale
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Login validation > should show alert when API key is only whitespace
LoginPage: Attempting to login with API Key:    ...

stderr | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Login validation > should show alert when API key is only whitespace
LoginPage: API Key input is empty.

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should close modal when close button clicked
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should close modal when close button clicked
[ScoutAiDemo] Previewing suggestion: suggestion-1

stderr | src/pages/__tests__/HomePage.test.tsx > HomePage > Basic Rendering > should redirect to login when no API key
[HomePage] No API key found, redirecting to login

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should show modal when viewing details
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Details Modal > should show modal when viewing details
[ScoutAiDemo] Previewing suggestion: suggestion-1

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Multiple Suggestions > should display correct suggestion count
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Successful login > should store API key in localStorage and navigate to home
LoginPage: Attempting to login with API Key: valid-api-...
LoginPage: API Key stored in localStorage.
LoginPage: Navigating to /

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Multiple Suggestions > should render multiple ScoutAiNotifications
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Multiple Suggestions > should handle interactions with each suggestion independently
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Multiple Suggestions > should handle interactions with each suggestion independently
[ScoutAiDemo] Accepting suggestion: suggestion-1

 ❯ src/components/__tests__/PhotoCard.test.tsx (31 tests | 1 failed) 447ms
   ✓ PhotoCard > Basic rendering > should render photo card with basic information 21ms
   ✓ PhotoCard > Basic rendering > should render photo image with correct src 5ms
   × PhotoCard > Basic rendering > should fallback to photo_url when no thumbnail URI available 9ms
     → [2mexpect([22m[31melement[39m[2m).toHaveAttribute([22m[32m[32m"src"[32m[39m[2m, [22m[32m[32m"https://example.com/photo.jpg"[32m[39m[2m) // element.getAttribute("src") === "https://example.com/photo.jpg"[22m

Expected the element to have attribute:
[32m  src="https://example.com/photo.jpg"[39m
Received:
[31m  src="https://example.com/web.jpg"[39m
   ✓ PhotoCard > Basic rendering > should show "No Image Available" when no image URI exists 2ms
   ✓ PhotoCard > Basic rendering > should handle missing description gracefully 3ms
   ✓ PhotoCard > Basic rendering > should handle missing creator name 3ms
   ✓ PhotoCard > Tag rendering > should render all photo tags 4ms
   ✓ PhotoCard > Tag rendering > should show "No tags" when photo has no tags 2ms
   ✓ PhotoCard > Tag rendering > should apply AI-enhanced styling to AI tags 12ms
   ✓ PhotoCard > Tag rendering > should apply active styling to filtered tags 6ms
   ✓ PhotoCard > Tag rendering > should handle tag clicks when onTagClick is provided 44ms
   ✓ PhotoCard > Tag rendering > should not crash with malformed tags 2ms
   ✓ PhotoCard > Photo click handling > should call onPhotoClick when card is clicked 11ms
   ✓ PhotoCard > Photo click handling > should not trigger photo click when tag is clicked 15ms
   ✓ PhotoCard > AI Suggestions > should show AI suggestion button when no suggestions exist 2ms
   ✓ PhotoCard > AI Suggestions > should show loading state when fetching suggestions 2ms
   ✓ PhotoCard > AI Suggestions > should call onFetchAiSuggestions when AI button is clicked 97ms
   ✓ PhotoCard > AI Suggestions > should use original URI if web URI is not available 37ms
   ✓ PhotoCard > AI Suggestions > should use photo_url as final fallback for AI suggestions 40ms
   ✓ PhotoCard > AI Suggestions > should not call onFetchAiSuggestions when no suitable URL is found 12ms
   ✓ PhotoCard > AI Suggestions > should display AI suggested tags when available 4ms
   ✓ PhotoCard > AI Suggestions > should display AI suggested description when available 3ms
   ✓ PhotoCard > AI Suggestions > should show error message when AI suggestion fails 2ms
   ✓ PhotoCard > AI Suggestions > should allow adding AI suggested tags 33ms
   ✓ PhotoCard > AI Suggestions > should not trigger photo click when AI suggestion button is clicked 29ms
   ✓ PhotoCard > AI Tag Error Handling > should handle AI tag addition errors gracefully 37ms
   ✓ PhotoCard > Advanced Tag Styling > should apply correct styling for active AI tags when onTagClick is not provided 2ms
   ✓ PhotoCard > Advanced Tag Styling > should apply correct styling for inactive tags when onTagClick is not provided 1ms
   ✓ PhotoCard > Accessibility > should have proper alt text for images 1ms
   ✓ PhotoCard > Accessibility > should have proper title attributes for tags 2ms
   ✓ PhotoCard > Accessibility > should have proper title for photo ID 1ms
stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Multiple Suggestions > should handle interactions with each suggestion independently
[ScoutAiDemo] Accepting suggestion: suggestion-2

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Edge Cases > should handle undefined suggestion data gracefully
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Edge Cases > should handle suggestion action errors gracefully
[ScoutAiDemo] Manual analysis triggered with options: { mode: [32m'smart'[39m, newPhotoDays: [33m30[39m, forceReanalysis: [33mfalse[39m }

stdout | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Edge Cases > should handle suggestion action errors gracefully
[ScoutAiDemo] Accepting suggestion: suggestion-1

stderr | src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Edge Cases > should handle suggestion action errors gracefully
[ScoutAiDemo] Failed to accept suggestion: Error: Action failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/components/__tests__/ScoutAiDemo.test.tsx:614:61
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/pages/__tests__/LoginPage.test.tsx > LoginPage > Successful login > should handle API key with leading/trailing spaces
LoginPage: Attempting to login with API Key:   valid-ap...
LoginPage: API Key stored in localStorage.
LoginPage: Navigating to /

stderr | src/pages/__tests__/HomePage.test.tsx > HomePage > Photo Grid > should disable refresh button when no API key
[HomePage] No API key found, redirecting to login

 ❯ src/components/__tests__/ScoutAiDemo.test.tsx (38 tests | 3 failed) 665ms
   ✓ ScoutAiDemo > Component Visibility > should not render when visible is false 21ms
   ✓ ScoutAiDemo > Component Visibility > should render when visible is true 13ms
   ✓ ScoutAiDemo > Demo Controls Display > should display correct photo count 2ms
   ✓ ScoutAiDemo > Demo Controls Display > should not display suggestions when none are triggered 4ms
   ✓ ScoutAiDemo > Demo Controls Display > should display correct status text when not analyzing 5ms
   ✓ ScoutAiDemo > Demo Controls Display > should display Analyzing status when analyzing 7ms
   ✓ ScoutAiDemo > Demo Controls Display > should enable trigger button when photos available and not analyzing 3ms
   ✓ ScoutAiDemo > Demo Controls Display > should disable trigger button when analyzing 3ms
   × ScoutAiDemo > Demo Controls Display > should disable trigger button when less than 2 photos 9ms
     → Unable to find an element with the text: Trigger Analysis. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"space-y-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<div>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
              [36m>[39m
                [0mScout AI[0m
              [36m</h3>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-sm text-blue-700"[39m
              [36m>[39m
                [0m1 photos loaded[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m""[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mNeed 2+ Photos[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-blue-700 text-sm"[39m
        [36m>[39m
          [0m💡 Load at least 2 photos to use Scout AI analysis[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
   ✓ ScoutAiDemo > Demo Controls Display > should show helpful message when insufficient photos 3ms
   ✓ ScoutAiDemo > Error Display > should display error message when error exists 3ms
   ✓ ScoutAiDemo > Error Display > should not display error section when no error 7ms
   × ScoutAiDemo > Manual Analysis Trigger > should call analyzeSimilarPhotos when trigger button clicked 17ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -150,6 +150,11 @@[90m
[2m          },[22m
[2m        ],[22m
[2m      },[22m
[2m    ],[22m
[2m    true,[22m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ ScoutAiDemo > Manual Analysis Trigger > should handle multiple trigger clicks 6ms
   ✓ ScoutAiDemo > Auto-minimize Behavior > should auto-minimize after successful suggestions 15ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should display suggestion when manually triggered 9ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should render ScoutAiNotification for each active suggestion 19ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should handle accepting suggestions 14ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should handle rejecting suggestions 11ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should handle dismissing suggestions 9ms
   ✓ ScoutAiDemo > Suggestion Display and Interaction > should handle viewing preview 19ms
   ✓ ScoutAiDemo > Details Modal > should display suggestion message in modal 92ms
   ✓ ScoutAiDemo > Details Modal > should display confidence level 33ms
   ✓ ScoutAiDemo > Details Modal > should display recommendation details 40ms
   ✓ ScoutAiDemo > Details Modal > should display rationale 53ms
   ✓ ScoutAiDemo > Details Modal > should close modal when close button clicked 31ms
   ✓ ScoutAiDemo > Details Modal > should show modal when viewing details 59ms
   ✓ ScoutAiDemo > Multiple Suggestions > should display correct suggestion count 27ms
   ✓ ScoutAiDemo > Multiple Suggestions > should render multiple ScoutAiNotifications 11ms
   ✓ ScoutAiDemo > Multiple Suggestions > should handle interactions with each suggestion independently 33ms
   ✓ ScoutAiDemo > Edge Cases > should handle empty photos array 2ms
   ✓ ScoutAiDemo > Edge Cases > should handle undefined suggestion data gracefully 8ms
   ✓ ScoutAiDemo > Edge Cases > should handle suggestion action errors gracefully 13ms
   × ScoutAiDemo > Console Logging > should log manual analysis trigger 7ms
     → expected "log" to be called with arguments: [ Array(1) ][90m

Received: 

[1m  1st log call:

[22m[2m  [[22m
[32m-   "[ScoutAiDemo] Manual analysis triggered",[90m
[31m+   "[ScoutAiDemo] Manual analysis triggered with options:",[90m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ ScoutAiDemo > Console Logging > should log suggestion acceptance 22ms
   ✓ ScoutAiDemo > Console Logging > should log suggestion rejection 12ms
   ✓ ScoutAiDemo > Console Logging > should log suggestion dismissal 6ms
   ✓ ScoutAiDemo > Console Logging > should log viewing preview 17ms
stdout | src/__tests__/03-companyCamService.test.ts
[companyCamService] Initializing...

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should fetch photos with default parameters
[companyCamService] getPhotos called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m20[39m, tagIds: [90mundefined[39m }
[companyCamService] getPhotos - Making GET request to: https://api.companycam.com/v2/photos with params: { page: [33m1[39m, per_page: [33m20[39m, sort: [32m'-created_at'[39m }

 ❯ src/pages/__tests__/LoginPage.test.tsx (11 tests | 1 failed) 743ms
   × LoginPage > Rendering > should render login form with all elements 137ms
     → Unable to find an accessible element with the role "heading" and name `/login/i`

Here are the accessible roles:

  img:

  Name "Scout AI":
  [36m<img[39m
    [33malt[39m=[32m"Scout AI"[39m
    [33mclass[39m=[32m"w-16 h-16 rounded-full object-cover shadow-lg mb-4"[39m
    [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
  [36m/>[39m

  --------------------------------------------------
  heading:

  Name "Scout AI":
  [36m<h1[39m
    [33mclass[39m=[32m"text-3xl font-bold text-sky-400 mb-2"[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-gray-400 text-center text-sm"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500 mt-4 text-center"[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Login":
  [36m<button[39m
    [33mclass[39m=[32m"w-full bg-sky-600 hover:bg-sky-700 text-white font-semibold py-2 px-4 rounded-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2 focus:ring-offset-gray-800"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-gray-200 p-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-gray-800 p-8 rounded-lg shadow-xl w-full max-w-md"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center mb-6"[39m
        [36m>[39m
          [36m<img[39m
            [33malt[39m=[32m"Scout AI"[39m
            [33mclass[39m=[32m"w-16 h-16 rounded-full object-cover shadow-lg mb-4"[39m
            [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
          [36m/>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"text-3xl font-bold text-sky-400 mb-2"[39m
          [36m>[39m
            [0mScout AI[0m
          [36m</h1>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-gray-400 text-center text-sm"[39m
          [36m>[39m
            [0mEnter your CompanyCam API Key to access Scout AI.[0m
          [36m</p>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"block text-sm font-medium text-gray-300 mb-1"[39m
            [33mfor[39m=[32m"apiKey"[39m
          [36m>[39m
            [0mCompanyCam API Key[0m
          [36m</label>[39m
          [36m<input[39m
            [33mclass[39m=[32m"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-gray-200 focus:outline-none focus:ring-2 focus:ring-sky-500 placeholder-gray-500"[39m
            [33mid[39m=[32m"apiKey"[39m
            [33mplaceholder[39m=[32m"Paste your API key here"[39m
            [33mtype[39m=[32m"password"[39m
            [33mvalue[39m=[32m""[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<button[39m
          [33mclass[39m=[32m"w-full bg-sky-600 hover:bg-sky-700 text-white font-semibold py-2 px-4 rounded-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2 focus:ring-offset-gray-800"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</button>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-xs text-gray-500 mt-4 text-center"[39m
        [36m>[39m
          [0mYour API key will be stored locally in your browser.[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
   ✓ LoginPage > Rendering > should render input field with password type 5ms
   ✓ LoginPage > Form interaction > should update input value when user types 68ms
   ✓ LoginPage > Form interaction > should clear input after successful login 156ms
   ✓ LoginPage > Login validation > should show alert when API key is empty 23ms
   ✓ LoginPage > Login validation > should show alert when API key is only whitespace 44ms
   ✓ LoginPage > Successful login > should store API key in localStorage and navigate to home 115ms
   ✓ LoginPage > Successful login > should handle API key with leading/trailing spaces 101ms
   ✓ LoginPage > Keyboard interaction > should submit form when Enter key is pressed in input field 85ms
   ✓ LoginPage > Security considerations > should use password input type to obscure API key 6ms
   ✓ LoginPage > Security considerations > should inform user about local storage 2ms
stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should fetch photos with custom parameters
[companyCamService] getPhotos called with: { apiKey: [32m'Exists'[39m, page: [33m2[39m, perPage: [33m50[39m, tagIds: [ [32m'tag1'[39m, [32m'tag2'[39m ] }
[companyCamService] getPhotos - Making GET request to: https://api.companycam.com/v2/photos with params: {
  page: [33m2[39m,
  per_page: [33m50[39m,
  sort: [32m'-created_at'[39m,
  tag_ids: [ [32m'tag1'[39m, [32m'tag2'[39m ]
}

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should handle axios errors
[companyCamService] getPhotos called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m20[39m, tagIds: [90mundefined[39m }
[companyCamService] Cache hit for: photos-{"page":1,"per_page":20,"sort":"-created_at"}

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should handle axios error responses
[companyCamService] getPhotos called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m20[39m, tagIds: [90mundefined[39m }
[companyCamService] Cache hit for: photos-{"page":1,"per_page":20,"sort":"-created_at"}

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotoTags > should fetch photo tags successfully
[companyCamService] getPhotoTags called with: { apiKey: [32m'Exists'[39m, photoId: [32m'test-photo-id'[39m }
[companyCamService] getPhotoTags - Making GET request to: https://api.companycam.com/v2/photos/test-photo-id/tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotoTags > should return empty array for 404 errors
[companyCamService] getPhotoTags called with: { apiKey: [32m'Exists'[39m, photoId: [32m'test-photo-id'[39m }
[companyCamService] Cache hit for: photo-tags-test-photo-id

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotoTags > should throw non-404 errors
[companyCamService] getPhotoTags called with: { apiKey: [32m'Exists'[39m, photoId: [32m'test-photo-id'[39m }
[companyCamService] Cache hit for: photo-tags-test-photo-id

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > listCompanyCamTags > should fetch all company tags
[companyCamService] listCompanyCamTags called with: { apiKey: [32m'Exists'[39m }
[companyCamService] listCompanyCamTags - Making GET request to: https://api.companycam.com/v2/tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > listCompanyCamTags > should handle errors when fetching tags
[companyCamService] listCompanyCamTags called with: { apiKey: [32m'Exists'[39m }
[companyCamService] Cache hit for: all-tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > createCompanyCamTagDefinition > should create a new tag definition
[companyCamService] createCompanyCamTagDefinition called with: { apiKey: [32m'Exists'[39m, displayValue: [32m'New Tag'[39m }
[companyCamService] createCompanyCamTagDefinition - Making POST request to: https://api.companycam.com/v2/tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > createCompanyCamTagDefinition > should handle errors when creating tag definition
[companyCamService] createCompanyCamTagDefinition called with: { apiKey: [32m'Exists'[39m, displayValue: [32m'Test Tag'[39m }
[companyCamService] createCompanyCamTagDefinition - Making POST request to: https://api.companycam.com/v2/tags

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > createCompanyCamTagDefinition > should handle errors when creating tag definition
[companyCamService] createCompanyCamTagDefinition - Error creating tag definition for 'Test Tag' (Generic): Failed to create tag

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > addTagsToPhoto > should add tags to photo successfully
[companyCamService] addTagsToPhoto called with: {
  apiKey: [32m'Exists'[39m,
  photoId: [32m'test-photo-id'[39m,
  tagIds: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]
}
[companyCamService] addTagsToPhoto - Making POST request to: https://api.companycam.com/v2/photos/test-photo-id/tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > addTagsToPhoto > should handle empty tag array without making API call
[companyCamService] addTagsToPhoto called with: { apiKey: [32m'Exists'[39m, photoId: [32m'test-photo-id'[39m, tagIds: [] }
[companyCamService] addTagsToPhoto - No tag IDs provided, skipping API call.

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > addTagsToPhoto > should handle errors when adding tags
[companyCamService] addTagsToPhoto called with: {
  apiKey: [32m'Exists'[39m,
  photoId: [32m'test-photo-id'[39m,
  tagIds: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]
}
[companyCamService] addTagsToPhoto - Making POST request to: https://api.companycam.com/v2/photos/test-photo-id/tags

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > addTagsToPhoto > should handle errors when adding tags
[companyCamService] addTagsToPhoto - Error adding tags to photo test-photo-id (Generic): Failed to add tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getCurrentUser > should fetch current user successfully
[companyCamService] getCurrentUser called with: { apiKey: [32m'Exists'[39m }
[companyCamService] getCurrentUser - Making GET request to: https://api.companycam.com/v2/users/current

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getCurrentUser > should handle errors when fetching current user
[companyCamService] getCurrentUser called with: { apiKey: [32m'Exists'[39m }
[companyCamService] getCurrentUser - Making GET request to: https://api.companycam.com/v2/users/current

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > getCurrentUser > should handle errors when fetching current user
[companyCamService] getCurrentUser - Error fetching current user (Generic): User not found

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getCompanyDetails > should fetch company details successfully
[companyCamService] getCompanyDetails called with: { apiKey: [32m'Exists'[39m, companyId: [32m'company-1'[39m }
[companyCamService] getCompanyDetails - Making GET request to: https://api.companycam.com/v2/companies/company-1

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getCompanyDetails > should handle errors when fetching company details
[companyCamService] getCompanyDetails called with: { apiKey: [32m'Exists'[39m, companyId: [32m'company-1'[39m }
[companyCamService] getCompanyDetails - Making GET request to: https://api.companycam.com/v2/companies/company-1

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > getCompanyDetails > should handle errors when fetching company details
[companyCamService] getCompanyDetails - Error fetching company company-1 (Generic): Company not found

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should fetch projects with default parameters
[companyCamService] getProjects called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m50[39m }
[companyCamService] getProjects - Making GET request to: https://api.companycam.com/v2/projects with params: { page: [33m1[39m, per_page: [33m50[39m }

stdout | src/pages/__tests__/HomePage.test.tsx > HomePage > Logout Functionality > should handle logout
HomePage: Logging out.

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should fetch projects with custom parameters
[companyCamService] getProjects called with: { apiKey: [32m'Exists'[39m, page: [33m3[39m, perPage: [33m25[39m }
[companyCamService] getProjects - Making GET request to: https://api.companycam.com/v2/projects with params: { page: [33m3[39m, per_page: [33m25[39m }

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle errors when fetching projects
[companyCamService] getProjects called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m50[39m }
[companyCamService] getProjects - Making GET request to: https://api.companycam.com/v2/projects with params: { page: [33m1[39m, per_page: [33m50[39m }

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle errors when fetching projects
[companyCamService] getProjects - Error fetching projects (Generic): Projects not accessible

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle Axios errors when fetching projects
[companyCamService] getProjects called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m50[39m }
[companyCamService] getProjects - Making GET request to: https://api.companycam.com/v2/projects with params: { page: [33m1[39m, per_page: [33m50[39m }

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle Axios errors when fetching projects
[companyCamService] getProjects - Error fetching projects (Axios): { message: [32m'Network error'[39m, code: [32m'NETWORK_ERROR'[39m }

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle unknown errors when fetching projects
[companyCamService] getProjects called with: { apiKey: [32m'Exists'[39m, page: [33m1[39m, perPage: [33m50[39m }
[companyCamService] getProjects - Making GET request to: https://api.companycam.com/v2/projects with params: { page: [33m1[39m, per_page: [33m50[39m }

stderr | src/__tests__/03-companyCamService.test.ts > companyCamService > getProjects > should handle unknown errors when fetching projects
[companyCamService] getProjects - Unknown error fetching projects: { someProperty: [32m'not an Error object'[39m }

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle Axios errors in listCompanyCamTags
[companyCamService] listCompanyCamTags called with: { apiKey: [32m'Exists'[39m }
[companyCamService] Cache hit for: all-tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle generic errors in listCompanyCamTags
[companyCamService] listCompanyCamTags called with: { apiKey: [32m'Exists'[39m }
[companyCamService] Cache hit for: all-tags

stdout | src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle unknown errors in listCompanyCamTags
[companyCamService] listCompanyCamTags called with: { apiKey: [32m'Exists'[39m }
[companyCamService] Cache hit for: all-tags

 ❯ src/__tests__/03-companyCamService.test.ts (26 tests | 10 failed) 25ms
   × companyCamService > getPhotos > should fetch photos with default parameters 12ms
     → expected "wrap" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st wrap call:

[22m[33m@@ -6,8 +6,9 @@[90m
[2m        "Content-Type": "application/json",[22m
[2m      },[22m
[2m      "params": {[22m
[2m        "page": 1,[22m
[2m        "per_page": 20,[22m
[31m+       "sort": "-created_at",[90m
[2m      },[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   × companyCamService > getPhotos > should fetch photos with custom parameters 1ms
     → expected "wrap" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st wrap call:

[22m[33m@@ -6,10 +6,11 @@[90m
[2m        "Content-Type": "application/json",[22m
[2m      },[22m
[2m      "params": {[22m
[2m        "page": 2,[22m
[2m        "per_page": 50,[22m
[31m+       "sort": "-created_at",[90m
[2m        "tag_ids": [[22m
[2m          "tag1",[22m
[2m          "tag2",[22m
[2m        ],[22m
[2m      },[22m
[39m[90m

Number of calls: [1m1[22m
[39m
   × companyCamService > getPhotos > should handle axios errors 1ms
     → promise resolved "[ { id: 'photo-1', …(15) } ]" instead of rejecting
   × companyCamService > getPhotos > should handle axios error responses 1ms
     → promise resolved "[ { id: 'photo-1', …(15) } ]" instead of rejecting
   ✓ companyCamService > getPhotoTags > should fetch photo tags successfully 0ms
   × companyCamService > getPhotoTags > should return empty array for 404 errors 1ms
     → expected [ { id: 'tag-1', …(5) } ] to deeply equal []
   × companyCamService > getPhotoTags > should throw non-404 errors 0ms
     → promise resolved "[ { id: 'tag-1', …(5) } ]" instead of rejecting
   ✓ companyCamService > listCompanyCamTags > should fetch all company tags 0ms
   × companyCamService > listCompanyCamTags > should handle errors when fetching tags 0ms
     → promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting
   ✓ companyCamService > createCompanyCamTagDefinition > should create a new tag definition 0ms
   ✓ companyCamService > createCompanyCamTagDefinition > should handle errors when creating tag definition 1ms
   ✓ companyCamService > addTagsToPhoto > should add tags to photo successfully 1ms
   ✓ companyCamService > addTagsToPhoto > should handle empty tag array without making API call 0ms
   ✓ companyCamService > addTagsToPhoto > should handle errors when adding tags 1ms
   ✓ companyCamService > getCurrentUser > should fetch current user successfully 0ms
   ✓ companyCamService > getCurrentUser > should handle errors when fetching current user 0ms
   ✓ companyCamService > getCompanyDetails > should fetch company details successfully 0ms
   ✓ companyCamService > getCompanyDetails > should handle errors when fetching company details 0ms
   ✓ companyCamService > getProjects > should fetch projects with default parameters 0ms
   ✓ companyCamService > getProjects > should fetch projects with custom parameters 0ms
   ✓ companyCamService > getProjects > should handle errors when fetching projects 0ms
   ✓ companyCamService > getProjects > should handle Axios errors when fetching projects 0ms
   ✓ companyCamService > getProjects > should handle unknown errors when fetching projects 0ms
   × companyCamService > Error Handling Coverage > should handle Axios errors in listCompanyCamTags 1ms
     → promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting
   × companyCamService > Error Handling Coverage > should handle generic errors in listCompanyCamTags 0ms
     → promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting
   × companyCamService > Error Handling Coverage > should handle unknown errors in listCompanyCamTags 0ms
     → promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting
 ❯ src/pages/__tests__/HomePage.test.tsx (20 tests | 1 failed) 463ms
   × HomePage > Basic Rendering > should render HomePage with user logged in 46ms
     → Found multiple elements with the text: Scout AI

Here are the matching elements:

Ignored nodes: comments, script, style
[36m<h1[39m
  [33mclass[39m=[32m"text-2xl sm:text-3xl font-bold text-sky-400"[39m
[36m>[39m
  [0mScout AI[0m
[36m</h1>[39m

Ignored nodes: comments, script, style
[36m<h3[39m
  [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
[36m>[39m
  [0mScout AI[0m
[36m</h3>[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mdata-testid[39m=[32m"browser-router"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"flex flex-col min-h-screen"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col md:flex-row md:justify-between md:items-center p-4 bg-gray-900 text-white space-y-4 md:space-y-0"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-center md:justify-start space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 sm:w-12 sm:h-12 rounded-full object-cover shadow-lg"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"text-2xl sm:text-3xl font-bold text-sky-400"[39m
            [36m>[39m
              [0mScout AI[0m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"text-center md:text-right"[39m
          [36m>[39m
            [36m<div>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"text-base sm:text-lg font-light"[39m
              [36m>[39m
                [0mWelcome, [0m
                [36m<span[39m
                  [33mclass[39m=[32m"font-semibold"[39m
                [36m>[39m
                  [0mTest[0m
                [36m</span>[39m
                [0m![0m
              [36m</h2>[39m
              [36m<button[39m
                [33mclass[39m=[32m"mt-2 text-xs text-sky-400 hover:text-sky-300 underline"[39m
              [36m>[39m
                [0mLogout[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"p-5 font-sans"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-6 text-center"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"px-6 py-2.5 bg-sky-600 text-white rounded-lg hover:bg-sky-500 disabled:bg-gray-600 disabled:opacity-70 transition-all duration-150 ease-in-out shadow-md hover:shadow-lg transform hover:scale-105"[39m
            [36m>[39m
              [0mRefresh Photos[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"space-y-4"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Scout AI"[39m
                    [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
                    [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
                  [36m/>[39m
                  [36m<div>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
                    [36m>[39m
                      [0mScout AI[0m
                    [36m</h3>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"text-sm text-blue-700"[39m
                    [36m>[39m
                      [0m1 photos loaded[0m
                    [36m</p>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m""[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                      [33mdisabled[39m=[32m""[39m
                    [36m>[39m
                      [0mNeed 2+ Photos[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-blue-700 text-sm"[39m
              [36m>[39m
                [0m💡 Load at least 2 photos to use Scout AI analysis[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-6"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-white border border-gray-200 rounded-lg shadow-sm "[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"p-6"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center justify-between mb-6"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-lg font-medium text-gray-900"[39m
                    [36m>[39m
                      [0mRetention Policy[0m
                    [36m</h3>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"mt-1 text-sm text-gray-500"[39m
                    [36m>[39m
                      [0mConfigure automatic deletion of archived photos[0m
                    [36m</p>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex items-center"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"text-sm text-gray-500 mr-3"[39m
                    [36m>[39m
                      [0mEnabled[0m
                    [36m</span>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"bg-indigo-600 text-white px-3 py-1 text-sm rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"[39m
                      [33mtype[39m=[32m"button"[39m
                    [36m>[39m
                      [0mEdit[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"space-y-4"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"grid grid-cols-1 md:grid-cols-3 gap-4"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mArchive Retention[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m30[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays[0m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mDeletion Grace Period[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m7[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays[0m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mWarning Notice[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m3[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays before[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-md p-4"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"flex"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"flex-shrink-0"[39m
                      [36m>[39m
                        [36m<svg[39m
                          [33mclass[39m=[32m"h-5 w-5 text-blue-400"[39m
                          [33mfill[39m=[32m"currentColor"[39m
                          [33mviewBox[39m=[32m"0 0 20 20"[39m
                        [36m>[39m
                          [36m<path[39m
                            [33mclip-rule[39m=[32m"evenodd"[39m
                            [33md[39m=[32m"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"[39m
                            [33mfill-rule[39m=[32m"evenodd"[39m
                          [36m/>[39m
                        [36m</svg>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"ml-3"[39m
                      [36m>[39m
                        [36m<h3[39m
                          [33mclass[39m=[32m"text-sm font-medium text-blue-800"[39m
                        [36m>[39m
                          [0mHow it works[0m
                        [36m</h3>[39m
                        [36m<div[39m
                          [33mclass[39m=[32m"mt-2 text-sm text-blue-700"[39m
                        [36m>[39m
                          [36m<p>[39m
                            [0mArchived photos are automatically marked for deletion after [0m
                            [0m30[0m
                            [0m days, then permanently removed after an additional [0m
                            [0m7[0m
                            [0m day grace period. You'll receive notifications [0m
                            [0m3[0m
                            [0m days before deletion.[0m
                          [36m</p>[39m
                        [36m</div>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-gray-800 border border-gray-700 p-4 rounded-lg cursor-pointer shadow-md hover:shadow-xl transition-shadow duration-200 ease-in-out flex flex-col text-gray-300"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"w-full h-48 rounded-md mb-3 bg-gray-700 flex items-center justify-center overflow-hidden"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Test photo"[39m
                  [33mclass[39m=[32m"w-full h-full object-cover"[39m
                  [33msrc[39m=[32m"https://example.com/photo.jpg"[39m
                [36m/>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col flex-grow"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"text-lg font-semibold text-gray-100 mb-1 mt-2 truncate"[39m
                  [33mtitle[39m=[32m"Photo ID: photo-1"[39m
                [36m>[39m
                  [0mPhoto ID: photo-1[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-sm text-gray-400 mb-1 truncate"[39m
                [36m>[39m
                  [0mBy: [0m
                  [0mJohn Doe[0m
                [36m</p>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-sm text-gray-300 mt-1 mb-2 line-clamp-2"[39m
                  [33mtitle[39m=[32m"Test photo"[39m
                [36m>[39m
                  [0mTest photo[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-auto pt-2 flex flex-wrap gap-2 mb-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs text-gray-500 italic"[39m
                  [36m>[39m
                    [0mNo tags[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-3 pt-3 border-t border-gray-600"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex justify-center"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"mt-2 px-6 py-2.5 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 flex items-center justify-center space-x-1.5 transition-colors duration-150 ease-in-out group"[39m
                    [36m>[39m
                      [36m<svg[39m
                        [33mclass[39m=[32m"h-4 w-4 mr-1.5"[39m
                        [33mfill[39m=[32m"currentColor"[39m
                        [33mviewBox[39m=[32m"0 0 20 20"[39m
                        [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                      [36m>[39m
                        [36m<path[39m
                          [33md[39m=[32m"M10 3.5a1.5 1.5 0 011.5 1.5v1a1.5 1.5 0 01-3 0v-1A1.5 1.5 0 0110 3.5zM3.188 8.044A5.5 5.5 0 0110 4.5h.008a5.5 5.5 0 016.804 3.544l.002.005.003.005a4.502 4.502 0 01-.82 4.44l-2.67 3.523a1.5 1.5 0 01-2.331.12l-2.67-3.523a4.502 4.502 0 01-.82-4.44l.002-.005.003-.005zM10 13a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"[39m
                        [36m/>[39m
                      [36m</svg>[39m
                      [36m<span>[39m
                        [0mSuggest AI Tags[0m
                      [36m</span>[39m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
   ✓ HomePage > Basic Rendering > should redirect to login when no user 5ms
   ✓ HomePage > Basic Rendering > should redirect to login when no API key 26ms
   ✓ HomePage > Photo Loading States > should show loading state when fetching photos 91ms
   ✓ HomePage > Photo Loading States > should show error state when photo loading fails 6ms
   ✓ HomePage > Tag Management > should show tag error when present 12ms
   ✓ HomePage > Tag Management > should show tag filters when tags are active 14ms
   ✓ HomePage > Tag Management > should handle clear all filters 29ms
   ✓ HomePage > Photo Grid > should render photo cards 8ms
   ✓ HomePage > Photo Grid > should handle refresh photos button 25ms
   ✓ HomePage > Photo Grid > should disable refresh button when no API key 14ms
   ✓ HomePage > Photo Grid > should disable refresh button when loading 33ms
   ✓ HomePage > Photo Modal > should open modal when photo is clicked 61ms
   ✓ HomePage > Photo Modal > should render modal when open 30ms
   ✓ HomePage > Loading More Photos > should show loading more indicator when loading with existing photos 7ms
   ✓ HomePage > Logout Functionality > should handle logout 20ms
   ✓ HomePage > User Context Display > should display projects count when user has projects 8ms
   ✓ HomePage > User Context Display > should display singular project text when user has one project 8ms
   ✓ HomePage > Tag Management Integration > should trigger onPhotoUpdate callback when tag is added 5ms
   ✓ HomePage > Tag Filter Styling > should apply inactive styling to non-active tags 12ms
 ❯ src/lib/__tests__/queryClient.test.ts (16 tests | 1 failed) 26ms
   ✓ queryClient > should be an instance of QueryClient 3ms
   × queryClient > should have correct default options 11ms
     → expected 600000 to be 300000 // Object.is equality
   ✓ queryClient > retry logic > should not retry 4xx errors 0ms
   ✓ queryClient > retry logic > should not retry 401 unauthorized errors 0ms
   ✓ queryClient > retry logic > should not retry 403 forbidden errors 0ms
   ✓ queryClient > retry logic > should not retry 404 not found errors 0ms
   ✓ queryClient > retry logic > should retry 5xx server errors up to 3 times 0ms
   ✓ queryClient > retry logic > should retry network errors up to 3 times 0ms
   ✓ queryClient > retry logic > should retry non-HTTP errors up to 3 times 0ms
   ✓ queryClient > retry delay > should implement exponential backoff 4ms
   ✓ queryClient > retry delay > should cap retry delay at 30 seconds 0ms
   ✓ queryClient > query methods > should be able to set and get query data 4ms
   ✓ queryClient > query methods > should be able to invalidate queries 0ms
   ✓ queryClient > query methods > should be able to clear all queries 0ms
   ✓ queryClient > query state management > should track query states correctly 0ms
   ✓ queryClient > query state management > should handle query cache correctly 0ms
stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should handle errors during analysis gracefully
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should handle errors during analysis gracefully
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m

stdout | src/hooks/__tests__/usePhotosQuery.test.tsx
[companyCamService] Initializing...

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Basic Functionality > should fetch photos successfully
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Basic Functionality > should handle loading state correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Options Handling > should use custom page and perPage options
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Options Handling > should pass tagIds when provided
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Pagination > should handle hasMorePhotos correctly when full page is returned
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Context Provider Setup > should provide context when used within provider
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Context Provider Setup > should provide context when used within provider
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Context Provider Setup > should provide context when used within provider
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Context Provider Setup > should provide context when used within provider
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Context Provider Setup > should provide context when used within provider
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Initial State > should start with loading state and empty data
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Initial State > should start with loading state and empty data
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Initial State > should start with loading state and empty data
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Initial State > should start with loading state and empty data
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Initial State > should start with loading state and empty data
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should fetch and display user data when API key exists
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should fetch and display user data when API key exists
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should fetch and display user data when API key exists
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should fetch and display user data when API key exists
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should fetch and display user data when API key exists
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should not fetch company details if user has no company_id
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should not fetch company details if user has no company_id
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should not fetch company details if user has no company_id
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m''[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Successful Data Fetching > should not fetch company details if user has no company_id
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > No API Key Scenarios > should handle missing API key gracefully
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Not Found

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should fetch photos successfully on first load
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should fetch photos successfully on first load
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should fetch photos successfully on first load
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should fetch photos successfully on first load
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > No API Key Scenarios > should handle empty string API key
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Not Found

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > No API Key Scenarios > should handle undefined API key
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Not Found

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should set loading state during fetch
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should set loading state during fetch
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should set loading state during fetch
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should set loading state during fetch
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCurrentUser API error
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCurrentUser API error
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle API key missing
[usePhotoData] fetchPhotos called for page: 1

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCurrentUser API error
[UserContext] Error fetching user context: Error: Failed to fetch user
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:234:69
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCompanyDetails API error
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCompanyDetails API error
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCompanyDetails API error
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getCompanyDetails API error
[UserContext] Error fetching user context: Error: Failed to fetch company
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:250:72
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotos error
[usePhotoData] fetchPhotos called for page: 1

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getProjects API error
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getProjects API error
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getProjects API error
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getProjects API error
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle getProjects API error
[UserContext] Error fetching user context: Error: Failed to fetch projects
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:267:66
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotos error
[usePhotoData] Error in fetchPhotos: Error: API request failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:165:64
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Pagination > should handle hasMorePhotos correctly when partial page is returned
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle API error without message
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle API error without message
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle API error without message
[UserContext] Error fetching user context: Error: 
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:282:69
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotoTags error
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotoTags error
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle non-Error objects thrown
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle non-Error objects thrown
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotoTags error
[usePhotoData] Error processing photo photo-1: Error: Tags fetch failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:180:67
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Error Handling > should handle non-Error objects thrown
[UserContext] Error fetching user context: String error

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Fetching > should handle companyCamService.getPhotoTags error
[usePhotoData] Error in fetchPhotos: Error: Tags fetch failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:180:67
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Route Changes > should respond to location changes
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Route Changes > should respond to location changes
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should fetch and apply AI enhancements successfully
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should fetch and apply AI enhancements successfully
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Route Changes > should respond to location changes
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Route Changes > should respond to location changes
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Route Changes > should respond to location changes
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should fetch and apply AI enhancements successfully
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should fetch and apply AI enhancements successfully
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stderr | src/components/__tests__/PhotoModal.test.tsx > PhotoModal > AI tag adding > should handle API key missing error
[PhotoModal] Error adding AI tag 'wiring': Error: User not available for adding AI tag
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/components/__tests__/PhotoModal.test.tsx:434:40
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle 404 response for AI enhancements gracefully
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle 404 response for AI enhancements gracefully
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle 404 response for AI enhancements gracefully
[usePhotoData] No persisted AI enhancements for photo-1 (404)

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle 404 response for AI enhancements gracefully
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle AI enhancement fetch errors
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle AI enhancement fetch errors
[usePhotoData] Fetched 1 basic photos for page 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle AI enhancement fetch errors
[usePhotoData] Network error fetching persisted AI for photo-1: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:252:42
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > AI Enhancements Integration > should handle AI enhancement fetch errors
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should allow manual refetch via fetchUserContext
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] fetchPhotos called for page: 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Fetched 1 basic photos for page 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should handle pagination correctly
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Persisted AI data for photo-new: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should replace photos when fetching page 1
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-new'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should set hasMorePhotos to false when fewer than 20 photos returned
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should set hasMorePhotos to false when fewer than 20 photos returned
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should set hasMorePhotos to false when fewer than 20 photos returned
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should set hasMorePhotos to false when fewer than 20 photos returned
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fetched 20 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-3: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-4: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-5: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-6: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-7: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-8: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-9: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-10: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-11: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-12: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-13: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-14: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-15: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-16: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-17: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-18: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-19: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-20: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-3'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-4'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-5'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-6'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-7'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-8'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-9'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-10'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-11'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-12'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-13'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-14'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-15'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-16'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-17'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-18'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-19'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-20'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] fetchPhotos called for page: 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fetched 1 basic photos for page 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Pagination > should provide loadMore convenience function
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should filter photos by tag IDs
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should filter photos by tag IDs
[usePhotoData] Fetched 2 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should filter photos by tag IDs
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should filter photos by tag IDs
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m ]
  }
]

stderr | src/components/__tests__/PhotoModal.test.tsx > PhotoModal > AI tag adding > should handle string errors in tag addition
[PhotoModal] Error adding AI tag 'wiring': Network connection failed

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should show all photos when no filters applied
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should show all photos when no filters applied
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should show all photos when no filters applied
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should show all photos when no filters applied
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should handle AND logic for multiple tag filters
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should handle AND logic for multiple tag filters
[usePhotoData] Fetched 2 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should handle AND logic for multiple tag filters
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Filtering > should handle AND logic for multiple tag filters
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Cache Updates > should update specific photo in cache
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Cache Updates > should update specific photo in cache
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Cache Updates > should update specific photo in cache
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Photo Cache Updates > should update specific photo in cache
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Persisted AI data for refreshed-photo: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Refresh Functionality > should refresh photos (fetch page 1)
[usePhotoData] Fully processed photos: [
  {
    id: [32m'refreshed-photo'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Pagination > should handle loadMore correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] fetchPhotos called for page: 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] Error in fetchPhotos: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:523:68
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/components/__tests__/PhotoModal.test.tsx > PhotoModal > AI tag adding > should handle unknown errors in tag addition
[PhotoModal] Error adding AI tag 'wiring': { code: [33m500[39m, message: [32m'Unknown error'[39m }

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Error Recovery > should clear error on successful fetch after error
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] fetchPhotos called for page: 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Fetched 1 basic photos for page 2

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Duplicate Photo Handling > should prevent duplicate photos when paginating
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement fetch with non-404 error response
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement fetch with non-404 error response
[usePhotoData] Fetched 1 basic photos for page 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement fetch with non-404 error response
[usePhotoData] Error fetching persisted AI for photo-1: 500 Internal server error

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement fetch with non-404 error response
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle network error during AI enhancement fetch
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle network error during AI enhancement fetch
[usePhotoData] Fetched 1 basic photos for page 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle network error during AI enhancement fetch
[usePhotoData] Network error fetching persisted AI for photo-1: Error: Network timeout
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:601:42
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle network error during AI enhancement fetch
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle tag processing error for individual photo
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle tag processing error for individual photo
[usePhotoData] Fetched 1 basic photos for page 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle tag processing error for individual photo
[usePhotoData] Error processing photo photo-1: Error: Tag processing failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:618:67
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle tag processing error for individual photo
[usePhotoData] Error in fetchPhotos: Error: Tag processing failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:618:67
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle filtered photo update when filters are active
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle filtered photo update when filters are active
[usePhotoData] Fetched 2 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle filtered photo update when filters are active
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}
[usePhotoData] Persisted AI data for photo-2: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-1'[39m,
  ai_description: [32m'AI enhanced description'[39m,
  accepted_ai_tags: [ [32m'ai-tag-1'[39m, [32m'ai-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle filtered photo update when filters are active
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  },
  {
    id: [32m'photo-2'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'AI enhanced description'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement response parsing error
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement response parsing error
[usePhotoData] Fetched 1 basic photos for page 1

stderr | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement response parsing error
[usePhotoData] Network error fetching persisted AI for photo-1: Error: JSON parse error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/usePhotoData.test.tsx:681:41
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle AI enhancement response parsing error
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle malformed AI enhancement data
[usePhotoData] fetchPhotos called for page: 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle malformed AI enhancement data
[usePhotoData] Fetched 1 basic photos for page 1

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle malformed AI enhancement data
[usePhotoData] Persisted AI data for photo-1: {
  photo_id: [32m'test-photo'[39m,
  accepted_ai_tags: [1mnull[22m,
  ai_description: [90mundefined[39m
}

stdout | src/hooks/__tests__/usePhotoData.test.tsx > usePhotoData > Additional Error Handling Coverage > should handle malformed AI enhancement data
[usePhotoData] Fully processed photos: [
  {
    id: [32m'photo-1'[39m,
    company_id: [32m'company-1'[39m,
    creator_id: [32m'user-1'[39m,
    creator_type: [32m'user'[39m,
    creator_name: [32m'Test User'[39m,
    project_id: [32m'project-1'[39m,
    processing_status: [32m'processed'[39m,
    coordinates: [],
    uris: [],
    hash: [32m'test-hash'[39m,
    description: [32m'Test photo'[39m,
    internal: [33mfalse[39m,
    photo_url: [32m'https://example.com/photo1.jpg'[39m,
    captured_at: [33m1750355507299[39m,
    created_at: [33m1750355507299[39m,
    updated_at: [33m1750355507299[39m,
    tags: [ [36m[Object][39m ]
  }
]

 ✓ src/hooks/__tests__/usePhotoData.test.tsx (28 tests) 112ms
stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Pagination > should handle isLoadingMore state logic
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Manual Refetch > should show loading state during manual refetch
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle localStorage throwing an error
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle localStorage throwing an error
[UserContext] Error loading user settings from localStorage: Error: localStorage unavailable
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:369:15[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as getItem] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:52:42
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle empty projects array
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle empty projects array
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle empty projects array
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle empty projects array
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle empty projects array
[UserContext] Projects fetched: []

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle user without company_id field
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle user without company_id field
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle user without company_id field
[UserContext] Current user fetched: { id: [32m'user-123'[39m, email_address: [32m'test@example.com'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Edge Cases > should handle user without company_id field
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Error fetching user context: Error: First error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/UserContext.test.tsx:411:73
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to UserContextProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should clear error when starting new fetch
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should maintain loading state throughout all API calls
[UserContext] useEffect triggered due to fetchUserContext or location change. Pathname: /
[UserContext] Attempting to fetch user context. API Key from localStorage: Found
[UserContext] Fetching current user...

stderr | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should maintain loading state throughout all API calls
[UserContext] Error loading user settings from localStorage: SyntaxError: Unexpected token 'v', "valid-api-key" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:54:29
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/UserContext.tsx:143:5
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m
    at recursivelyTraversePassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13815:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13957:11[90m)[39m

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should maintain loading state throughout all API calls
[UserContext] Current user fetched: {
  id: [32m'user-123'[39m,
  company_id: [32m'company-456'[39m,
  email_address: [32m'test@example.com'[39m,
  first_name: [32m'John'[39m,
  last_name: [32m'Doe'[39m,
  status: [32m'active'[39m
}
[UserContext] Fetching company details for company_id: company-456...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should maintain loading state throughout all API calls
[UserContext] Company details fetched: { id: [32m'company-456'[39m, name: [32m'Test Company'[39m, status: [32m'active'[39m }
[UserContext] Fetching projects...

stdout | src/contexts/__tests__/UserContext.test.tsx > UserContext > Loading States > should maintain loading state throughout all API calls
[UserContext] Projects fetched: [
  { id: [32m'project-1'[39m, name: [32m'Project Alpha'[39m },
  { id: [32m'project-2'[39m, name: [32m'Project Beta'[39m }
]

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Actions > should handle refresh correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

 ✓ src/contexts/__tests__/UserContext.test.tsx (21 tests) 220ms
stderr | src/__tests__/integration-simple.test.tsx > Integration Tests - Component Workflows > PhotoModal Workflows > should handle service errors in modal
[PhotoModal] Error adding AI tag 'error-tag': Error: Service error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/__tests__/integration-simple.test.tsx:327:56
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

 ✓ src/components/__tests__/ScoutAiNotification.test.tsx (18 tests) 284ms
stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Actions > should handle refresh correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Actions > should handle setPage correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

 ✓ src/__tests__/integration-simple.test.tsx (9 tests) 324ms
stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Actions > should handle updatePhotoInCache correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Actions > should handle updatePhotoInCache correctly
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Tag Filtering > should filter photos by tagIds
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Error Handling > should handle auth errors correctly by not retrying
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/hooks/__tests__/usePhotosQuery.test.tsx > usePhotosQuery > Query Key Management > should use correct query keys for caching
As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']

stderr | src/components/__tests__/PhotoModal.test.tsx > PhotoModal > Error handling > should handle missing image URI gracefully in AI suggestions
[PhotoModal] No image URI available for suggestions.

 ✓ src/hooks/__tests__/usePhotosQuery.test.tsx (17 tests) 686ms
 ✓ src/components/__tests__/PhotoModal.test.tsx (49 tests) 905ms
stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should not generate suggestions when no similar photos found
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should not generate suggestions when no similar photos found
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > suggestion management > should handle rejecting suggestions
[Scout AI] Updated user preferences

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > suggestion management > should handle rejecting suggestions
[Scout AI] Rejected suggestion: suggestion-1

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > suggestion management > should handle dismissing suggestions
[Scout AI] Dismissed suggestion: suggestion-1

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > user preferences > should update user preferences and persist to localStorage
[Scout AI] Updated user preferences

stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > photo actions > should accept suggestions with photo actions
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > photo actions > should accept suggestions with photo actions
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:468:9

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should fetch AI suggestions successfully
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should fetch AI suggestions successfully
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should set loading state during AI suggestions fetch
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should set loading state during AI suggestions fetch
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should handle AI suggestions fetch error
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should handle AI suggestions fetch error
[useAiEnhancements] Error fetching AI suggestions for photo-1: Error: AI suggestion request failed: 500 AI API failed
    at Object.fetchAiSuggestions [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useAiEnhancements.ts:109:15[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:191:9

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should handle AI suggestions network error
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should handle AI suggestions network error
[useAiEnhancements] Error fetching AI suggestions for photo-1: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:202:42
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should include projectId in API call when provided
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should include projectId in API call when provided
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should filter out existing tags from suggestions
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Suggestions Fetching > should filter out existing tags from suggestions
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","existing tag","repair"],"suggestedDescription":"AI description","checklistTriggers":[]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'existing tag'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI description'[39m,
  checklistTriggers: []
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should load persisted enhancements successfully
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should load persisted enhancements successfully
[useAiEnhancements] Persisted data loaded for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-123'[39m,
  ai_description: [32m'Saved AI description'[39m,
  accepted_ai_tags: [ [32m'saved-tag-1'[39m, [32m'saved-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should set loading state during persisted enhancement fetch
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should set loading state during persisted enhancement fetch
[useAiEnhancements] Persisted data loaded for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should handle 404 response for persisted enhancements gracefully
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should handle 404 response for persisted enhancements gracefully
[useAiEnhancements] No persisted AI enhancements for photo-1 (404)

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should handle persisted enhancements fetch error
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should handle persisted enhancements fetch error
[useAiEnhancements] Error loading persisted enhancements for photo-1: Error: Failed to load persisted enhancements: 500 Server error
    at Object.loadPersistedEnhancements [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useAiEnhancements.ts:173:15[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:341:9

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should update photo with persisted data when callback provided
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Persisted Enhancements Loading > should update photo with persisted data when callback provided
[useAiEnhancements] Persisted data loaded for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-123'[39m,
  ai_description: [32m'Saved AI description'[39m,
  accepted_ai_tags: [ [32m'saved-tag-1'[39m, [32m'saved-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should save AI description successfully
[useAiEnhancements] Saving AI description for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should save AI description successfully
[useAiEnhancements] AI description saved for photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should handle AI description save error
[useAiEnhancements] Saving AI description for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should handle AI description save error
[useAiEnhancements] Error saving AI description for photo-1: Error: Failed to save AI description: 500 Save failed
    at Object.saveAiDescription [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useAiEnhancements.ts:221:15[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:419:11

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should update photo description when callback provided
[useAiEnhancements] Saving AI description for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Description Saving > should update photo description when callback provided
[useAiEnhancements] AI description saved for photo-1
[useAiEnhancements] Updated photo description in data cache for photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should add AI tag successfully
[useAiEnhancements] Adding AI tag "New AI Tag" to photo photo-1 (backend only)

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should add AI tag successfully
[useAiEnhancements] Merged AI tags for photo-1: [ [32m'New AI Tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should add AI tag successfully
[useAiEnhancements] AI tag "New AI Tag" saved to backend with merged tags: [ [32m'New AI Tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should handle AI tag addition error
[useAiEnhancements] Adding AI tag "Failed Tag" to photo photo-1 (backend only)

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should handle AI tag addition error
[useAiEnhancements] Merged AI tags for photo-1: [ [32m'Failed Tag'[39m ]

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should handle AI tag addition error
[useAiEnhancements] Error adding AI tag "Failed Tag" to photo-1: Error: Failed to save AI tag to enhancements: 500 Server error
    at Object.addAiTag [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useAiEnhancements.ts:284:15[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:505:11

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should update photo with new AI tag when callback provided
[useAiEnhancements] Adding AI tag "New AI Tag" to photo photo-1 (backend only)

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should update photo with new AI tag when callback provided
[useAiEnhancements] Merged AI tags for photo-1: [ [32m'New AI Tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > AI Tag Management > should update photo with new AI tag when callback provided
[useAiEnhancements] AI tag "New AI Tag" saved to backend with merged tags: [ [32m'New AI Tag'[39m ]
[useAiEnhancements] Updated photo with synthetic AI tag for photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear entire cache
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear entire cache
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear entire cache
[useAiEnhancements] Fetching AI suggestions for photo photo-2

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear entire cache
[useAiEnhancements] Raw response text for photo-2: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-2: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear entire cache
[useAiEnhancements] Clearing entire AI suggestions cache

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear specific photo cache
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear specific photo cache
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear specific photo cache
[useAiEnhancements] Fetching AI suggestions for photo photo-2

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear specific photo cache
[useAiEnhancements] Raw response text for photo-2: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-2: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should clear specific photo cache
[useAiEnhancements] Clearing AI cache for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Cache Management > should handle clearing non-existent photo cache gracefully
[useAiEnhancements] Clearing AI cache for photo non-existent

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Photo Update Integration > should update photo with persisted data correctly
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Photo Update Integration > should update photo with persisted data correctly
[useAiEnhancements] Persisted data loaded for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-123'[39m,
  ai_description: [32m'Saved AI description'[39m,
  accepted_ai_tags: [ [32m'saved-tag-1'[39m, [32m'saved-tag-2'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should handle concurrent operations correctly
[useAiEnhancements] Fetching AI suggestions for photo photo-1
[useAiEnhancements] Loading persisted enhancements for photo photo-1
[useAiEnhancements] Saving AI description for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should handle concurrent operations correctly
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should handle concurrent operations correctly
[useAiEnhancements] AI description saved for photo-1
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}
[useAiEnhancements] Persisted data loaded for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should maintain separate error states for different operations
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should maintain separate error states for different operations
[useAiEnhancements] Error fetching AI suggestions for photo-1: Error: AI suggestion request failed: 500 Suggestions failed
    at Object.fetchAiSuggestions [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/useAiEnhancements.ts:109:15[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:677:9

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should maintain separate error states for different operations
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Error Handling > should maintain separate error states for different operations
[useAiEnhancements] No persisted AI enhancements for photo-1 (404)

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Integration with UserContext > should handle missing user gracefully
[useAiEnhancements] No current user available for AI suggestions

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Integration with UserContext > should use user ID in API calls
[useAiEnhancements] Fetching AI suggestions for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Integration with UserContext > should use user ID in API calls
[useAiEnhancements] Raw response text for photo-1: {"suggestedTags":["roofing","repair"],"suggestedDescription":"AI generated description","checklistTriggers":["safety_check"]}
[useAiEnhancements] Parsed AI suggestions for photo-1: {
  suggestedTags: [ [32m'roofing'[39m, [32m'repair'[39m ],
  suggestedDescription: [32m'AI generated description'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ]
}

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle non-404 error when fetching existing AI tags
[useAiEnhancements] Adding AI tag "test-tag" to photo photo-1 (backend only)

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle non-404 error when fetching existing AI tags
[useAiEnhancements] Merged AI tags for photo-1: [ [32m'test-tag'[39m ]

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle non-404 error when fetching existing AI tags
[useAiEnhancements] Error fetching existing AI tags: 500

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle non-404 error when fetching existing AI tags
[useAiEnhancements] AI tag "test-tag" saved to backend with merged tags: [ [32m'test-tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle fetch error when getting existing AI tags
[useAiEnhancements] Adding AI tag "test-tag" to photo photo-1 (backend only)

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag to photo successfully
[useTagManagement] Adding tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag to photo successfully
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-2'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Repair'[39m,
  value: [32m'repair'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag to photo successfully
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "Repair" to photo photo-1

stderr | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle fetch error when getting existing AI tags
[useAiEnhancements] Could not fetch existing AI tags, starting fresh: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useAiEnhancements.test.tsx:748:32
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle fetch error when getting existing AI tags
[useAiEnhancements] Merged AI tags for photo-1: [ [32m'test-tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should handle fetch error when getting existing AI tags
[useAiEnhancements] AI tag "test-tag" saved to backend with merged tags: [ [32m'test-tag'[39m ]

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should mark existing tag as AI enhanced when loading persisted data
[useAiEnhancements] Loading persisted enhancements for photo photo-1

stdout | src/hooks/__tests__/useAiEnhancements.test.tsx > useAiEnhancements > Coverage for Uncovered Lines > should mark existing tag as AI enhanced when loading persisted data
[useAiEnhancements] Persisted data loaded for photo-1: {
  photo_id: [32m'photo-1'[39m,
  user_id: [32m'user-123'[39m,
  ai_description: [32m'Test description'[39m,
  accepted_ai_tags: [ [32m'Existing Tag'[39m ],
  created_at: [32m'2025-01-01T00:00:00Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00Z'[39m,
  suggestion_source: [32m'openai'[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag as AI-enhanced when requested
[useTagManagement] Adding tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag as AI-enhanced when requested
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-2'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Repair'[39m,
  value: [32m'repair'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag as AI-enhanced when requested
[useTagManagement] Added tag to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - Existing Tags > should add existing tag as AI-enhanced when requested
[useTagManagement] Persisted AI tag acceptance for "Repair"
[useTagManagement] Successfully added tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create and add new tag to photo
[useTagManagement] Adding tag "New Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create and add new tag to photo
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "New Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create and add new tag to photo
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508042[39m,
  updated_at: [33m1750355508042[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create and add new tag to photo
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "New Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create new AI-enhanced tag
[useTagManagement] Adding tag "AI New Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create new AI-enhanced tag
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "AI New Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create new AI-enhanced tag
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508051[39m,
  updated_at: [33m1750355508051[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create new AI-enhanced tag
[useTagManagement] Added tag to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should create new AI-enhanced tag
[useTagManagement] Persisted AI tag acceptance for "AI New Tag"
[useTagManagement] Successfully added tag "AI New Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should set loading state during tag addition
[useTagManagement] Adding tag "Test Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should set loading state during tag addition
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "Test Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should set loading state during tag addition
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508053[39m,
  updated_at: [33m1750355508053[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Tag Addition - New Tags > should set loading state during tag addition
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "Test Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Tag Toggle Functionality > should add tag to active filters when toggled on
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Tag Toggle Functionality > should remove tag from active filters when toggled off
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Removed tag tag-1, active filters: []

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Tag Toggle Functionality > should handle multiple tags selection
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag listing API error
[useTagManagement] Adding tag "Test Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Tag Toggle Functionality > should handle non-existent tag ID gracefully
[useTagFiltering] Toggling filter for tag non-existent-tag
[useTagFiltering] Added tag non-existent-tag, active filters: [ [32m'non-existent-tag'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Clear All Filters > should clear all active filters
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]
[useTagFiltering] Clearing all filters

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Clear All Filters > should handle clearing when no filters are active
[useTagFiltering] Clearing all filters

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - AND Mode > should filter photos with single tag (AND mode)
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - AND Mode > should filter photos with multiple tags using AND logic
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]

stderr | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag listing API error
[useTagManagement] Error adding tag "Test Tag" to photo photo-1: Error: API Error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useTagManagement.test.tsx:428:73
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - AND Mode > should return empty array when no photos match AND criteria
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-2'[39m ]
[useTagFiltering] Toggling filter for tag tag-3
[useTagFiltering] Added tag tag-3, active filters: [ [32m'tag-2'[39m, [32m'tag-3'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag creation error
[useTagManagement] Adding tag "New Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag creation error
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "New Tag"

stderr | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag creation error
[useTagManagement] Error adding tag "New Tag" to photo photo-1: Error: Creation failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useTagManagement.test.tsx:440:84
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - OR Mode > should filter photos with single tag (OR mode)
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag addition to photo error
[useTagManagement] Adding tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag addition to photo error
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-2'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Repair'[39m,
  value: [32m'repair'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - OR Mode > should filter photos with multiple tags using OR logic
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Filtering Logic - OR Mode > should return all matching photos for OR logic with non-overlapping tags
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-3
[useTagFiltering] Added tag tag-3, active filters: [ [32m'tag-1'[39m, [32m'tag-3'[39m ]

stderr | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle tag addition to photo error
[useTagManagement] Error adding tag "Repair" to photo photo-1: Error: Addition failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/hooks/__tests__/useTagManagement.test.tsx:451:69
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Dynamic Filter Logic Change > should allow changing filter logic from AND to OR
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]
[useTagFiltering] Changing filter logic to OR

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Dynamic Filter Logic Change > should allow changing filter logic from OR to AND
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]
[useTagFiltering] Changing filter logic to AND

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Adding tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "AI Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508067[39m,
  updated_at: [33m1750355508067[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Added tag to photo photo-1

stderr | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Failed to persist AI tag acceptance: 500 Server error

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should handle AI enhancement persistence error gracefully
[useTagManagement] Successfully added tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Photos Array Updates > should update filtered results when photos array changes
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should clear error state on successful operation
[useTagManagement] Adding tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should clear error state on successful operation
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-2'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Repair'[39m,
  value: [32m'repair'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Error Handling > should clear error state on successful operation
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "Repair" to photo photo-1

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Photos Array Updates > should maintain filter state when photos array changes
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should handle missing user for AI tag persistence
[useTagManagement] Adding tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should handle missing user for AI tag persistence
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "AI Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should handle missing user for AI tag persistence
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508075[39m,
  updated_at: [33m1750355508075[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should handle missing user for AI tag persistence
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should use correct user ID for AI enhancement persistence
[useTagManagement] Adding tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should use correct user ID for AI enhancement persistence
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "AI Tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should use correct user ID for AI enhancement persistence
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508076[39m,
  updated_at: [33m1750355508076[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should use correct user ID for AI enhancement persistence
[useTagManagement] Added tag to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > User Context Integration > should use correct user ID for AI enhancement persistence
[useTagManagement] Persisted AI tag acceptance for "AI Tag"
[useTagManagement] Successfully added tag "AI Tag" to photo photo-1

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Edge Cases > should handle photos with undefined or null tags
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

 ✓ src/hooks/__tests__/useAiEnhancements.test.tsx (32 tests) 78ms
stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Edge Cases > should handle photos with empty tags array
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Edge Cases > should handle duplicate tag IDs across photos
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Performance and Memoization > should not recompute filtered photos if filters and photos unchanged
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]

stdout | src/hooks/__tests__/useTagFiltering.test.tsx > useTagFiltering > Performance and Memoization > should recompute when filter state changes
[useTagFiltering] Toggling filter for tag tag-1
[useTagFiltering] Added tag tag-1, active filters: [ [32m'tag-1'[39m ]
[useTagFiltering] Toggling filter for tag tag-2
[useTagFiltering] Added tag tag-2, active filters: [ [32m'tag-1'[39m, [32m'tag-2'[39m ]

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should find existing tags case-insensitively
[useTagManagement] Adding tag "ROOFING" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should find existing tags case-insensitively
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-1'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Roofing'[39m,
  value: [32m'roofing'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should find existing tags case-insensitively
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "ROOFING" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should preserve display value case when adding existing tags
[useTagManagement] Adding tag "roofing" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should preserve display value case when adding existing tags
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Using existing tag: {
  id: [32m'tag-1'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'Roofing'[39m,
  value: [32m'roofing'[39m,
  created_at: [33m1750355508004[39m,
  updated_at: [33m1750355508004[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Case Sensitivity > should preserve display value case when adding existing tags
[useTagManagement] Added tag to photo photo-1
[useTagManagement] Successfully added tag "roofing" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Coverage for Uncovered Lines > should handle AI tag acceptance persistence error gracefully
[useTagManagement] Adding tag "ai-suggested-tag" to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Coverage for Uncovered Lines > should handle AI tag acceptance persistence error gracefully
[useTagManagement] Found 2 existing CompanyCam tags
[useTagManagement] Creating new tag definition: "ai-suggested-tag"

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Coverage for Uncovered Lines > should handle AI tag acceptance persistence error gracefully
[useTagManagement] Created new tag: {
  id: [32m'new-tag-id'[39m,
  company_id: [32m'company-1'[39m,
  display_value: [32m'New Tag'[39m,
  value: [32m'new tag'[39m,
  created_at: [33m1750355508088[39m,
  updated_at: [33m1750355508088[39m
}

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Coverage for Uncovered Lines > should handle AI tag acceptance persistence error gracefully
[useTagManagement] Added tag to photo photo-1

stdout | src/hooks/__tests__/useTagManagement.test.tsx > useTagManagement > Coverage for Uncovered Lines > should handle AI tag acceptance persistence error gracefully
[useTagManagement] Persisted AI tag acceptance for "ai-suggested-tag"
[useTagManagement] Successfully added tag "ai-suggested-tag" to photo photo-1

 ✓ src/__tests__/main.test.tsx (2 tests) 56ms
 ✓ src/hooks/__tests__/useTagFiltering.test.tsx (27 tests) 45ms
 ✓ src/hooks/__tests__/useTagManagement.test.tsx (28 tests) 79ms
stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should open modal with first photo
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should open modal with middle photo
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should open modal with last photo
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should handle photo not found in array
[usePhotoModal] Opening modal for photo not-found

stderr | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should handle photo not found in array
[usePhotoModal] Clicked photo not found in currently displayed photos

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should handle opening modal with empty photos array
[usePhotoModal] Opening modal for photo photo-1

stderr | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should handle opening modal with empty photos array
[usePhotoModal] Cannot open modal: photos array is empty

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Opening Modal > should handle single photo array
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Closing Modal > should close modal and reset state
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1
[usePhotoModal] Closing modal

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Closing Modal > should handle closing already closed modal
[usePhotoModal] Closing modal

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Next Photo > should navigate to next photo when possible
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0
[usePhotoModal] Navigating to next photo (index 1)

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Next Photo > should not navigate beyond last photo
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2
[usePhotoModal] Cannot navigate to next photo - at end or modal closed

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Next Photo > should not navigate when modal is closed
[usePhotoModal] Cannot navigate to next photo - at end or modal closed

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Next Photo > should navigate through all photos sequentially
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0
[usePhotoModal] Navigating to next photo (index 1)
[usePhotoModal] Navigating to next photo (index 2)

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Previous Photo > should navigate to previous photo when possible
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1
[usePhotoModal] Navigating to previous photo (index 0)

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Previous Photo > should not navigate before first photo
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0
[usePhotoModal] Cannot navigate to previous photo - at beginning or modal closed

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Previous Photo > should not navigate when modal is closed
[usePhotoModal] Cannot navigate to previous photo - at beginning or modal closed

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Navigation - Previous Photo > should navigate backwards through all photos sequentially
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2
[usePhotoModal] Navigating to previous photo (index 1)
[usePhotoModal] Navigating to previous photo (index 0)

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Photos Array Updates > should handle photos array changing while modal is open
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Photos Array Updates > should close modal when selected photo index becomes out of bounds
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Photos Array Updates > should handle empty photos array while modal is open
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Photos Array Updates > should handle photos array becoming longer while modal is open
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Edge Cases > should handle photos with duplicate IDs
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Edge Cases > should maintain correct state after multiple operations
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0
[usePhotoModal] Navigating to next photo (index 1)
[usePhotoModal] Navigating to next photo (index 2)
[usePhotoModal] Navigating to previous photo (index 1)
[usePhotoModal] Closing modal
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2

stdout | src/hooks/__tests__/usePhotoModal.test.tsx > usePhotoModal > Derived State Consistency > should maintain consistent derived state
[usePhotoModal] Opening modal for photo photo-1
[usePhotoModal] Modal opened with photo at index 0
[usePhotoModal] Opening modal for photo photo-2
[usePhotoModal] Modal opened with photo at index 1
[usePhotoModal] Opening modal for photo photo-3
[usePhotoModal] Modal opened with photo at index 2

 ✓ src/hooks/__tests__/usePhotoModal.test.tsx (26 tests) 44ms
stdout | src/lib/queries/__tests__/photoQueries.test.ts
[companyCamService] Initializing...

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should fetch AI enhancements successfully via batch endpoint
[photoQueries] Batch fetching AI enhancements for 2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should fetch AI enhancements successfully via batch endpoint
[photoQueries] Successfully batch fetched AI enhancements for 2/2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle batch endpoint errors gracefully
[photoQueries] Batch fetching AI enhancements for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle batch endpoint errors gracefully
[photoQueries] Error in batch fetch AI enhancements: Error: Batch AI enhancements request failed: 500
    at Module.batchFetchAiEnhancements [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:47:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:132:22
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle network errors gracefully
[photoQueries] Batch fetching AI enhancements for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle network errors gracefully
[photoQueries] Error in batch fetch AI enhancements: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:138:46
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle response with errors
[photoQueries] Batch fetching AI enhancements for 2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle response with errors
[photoQueries] Successfully batch fetched AI enhancements for 1/2 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchAiEnhancements > should handle response with errors
[photoQueries] Some AI enhancements failed to fetch: { [32m'photo-2'[39m: [32m'Failed to fetch'[39m }

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should fetch photo tags successfully via batch endpoint
[photoQueries] Batch fetching tags for 2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should fetch photo tags successfully via batch endpoint
[photoQueries] Successfully batch fetched tags for 2/2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle batch endpoint errors gracefully
[photoQueries] Batch fetching tags for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle batch endpoint errors gracefully
[photoQueries] Error in batch fetch photo tags: Error: Batch photo tags request failed: 500
    at Module.batchFetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:80:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:193:22
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle network errors gracefully
[photoQueries] Batch fetching tags for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle network errors gracefully
[photoQueries] Error in batch fetch photo tags: Error: Network error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:199:46
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle response with errors
[photoQueries] Batch fetching tags for 2 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle response with errors
[photoQueries] Successfully batch fetched tags for 1/2 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > batchFetchPhotoTags > should handle response with errors
[photoQueries] Some photo tags failed to fetch: { [32m'photo-2'[39m: [32m'Failed to fetch'[39m }

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should fetch and enhance photos successfully
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [90mundefined[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should fetch and enhance photos successfully
[photoQueries] Fetched 1 basic photos
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should fetch and enhance photos successfully
[photoQueries] Successfully batch fetched tags for 1/1 photos
[photoQueries] Successfully batch fetched AI enhancements for 1/1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should fetch and enhance photos successfully
[photoQueries] Successfully enhanced 1 photos with tags and AI data

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle empty photo results
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [90mundefined[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle empty photo results
[photoQueries] Fetched 0 basic photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle photos without AI enhancements
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [90mundefined[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle photos without AI enhancements
[photoQueries] Fetched 1 basic photos
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle photos without AI enhancements
[photoQueries] Successfully batch fetched tags for 1/1 photos
[photoQueries] Successfully batch fetched AI enhancements for 0/1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle photos without AI enhancements
[photoQueries] Successfully enhanced 1 photos with tags and AI data

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should merge AI tags with existing tags correctly
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [90mundefined[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should merge AI tags with existing tags correctly
[photoQueries] Fetched 1 basic photos
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should merge AI tags with existing tags correctly
[photoQueries] Successfully batch fetched tags for 1/1 photos
[photoQueries] Successfully batch fetched AI enhancements for 1/1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should merge AI tags with existing tags correctly
[photoQueries] Successfully enhanced 1 photos with tags and AI data

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle tagIds parameter
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [ [32m'tag1'[39m, [32m'tag2'[39m ]

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle tagIds parameter
[photoQueries] Fetched 1 basic photos
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle tagIds parameter
[photoQueries] Successfully batch fetched tags for 1/1 photos
[photoQueries] Successfully batch fetched AI enhancements for 1/1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle tagIds parameter
[photoQueries] Successfully enhanced 1 photos with tags and AI data

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle AI tag sanitization
[photoQueries] Fetching photos with enhancements - page: 1, perPage: 20, tagIds: [90mundefined[39m

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle AI tag sanitization
[photoQueries] Fetched 1 basic photos
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle AI tag sanitization
[photoQueries] Successfully batch fetched tags for 1/1 photos
[photoQueries] Successfully batch fetched AI enhancements for 1/1 photos

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotosWithEnhancements > should handle AI tag sanitization
[photoQueries] Successfully enhanced 1 photos with tags and AI data

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotoById > should log a warning about incomplete implementation
[photoQueries] Fetching single photo by ID: photo-1
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotoById > should log a warning about incomplete implementation
[photoQueries] Error in batch fetch photo tags: TypeError: Cannot read properties of undefined (reading 'ok')
    at batchFetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:79:19[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at async Promise.all (index 0)
    at Module.fetchPhotoById [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:197:42[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:380:22
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20
[photoQueries] Error in batch fetch AI enhancements: TypeError: Cannot read properties of undefined (reading 'ok')
    at batchFetchAiEnhancements [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:46:19[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at async Promise.all (index 1)
    at Module.fetchPhotoById [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/photoQueries.ts:197:42[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:380:22
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20

stdout | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotoById > should handle errors gracefully
[photoQueries] Fetching single photo by ID: photo-1
[photoQueries] Batch fetching tags for 1 photos
[photoQueries] Batch fetching AI enhancements for 1 photos

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotoById > should handle errors gracefully
[photoQueries] Error in batch fetch photo tags: Error: Test error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:392:42
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
[photoQueries] Error in batch fetch AI enhancements: Error: Test error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/lib/queries/__tests__/photoQueries.test.ts:392:42
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stderr | src/lib/queries/__tests__/photoQueries.test.ts > photoQueries > fetchPhotoById > should handle errors gracefully
[photoQueries] fetchPhotoById is incomplete - need basic photo data for photo-1

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 400 when photoId is missing
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: GET Query: {}
[AI Enhancements GET] Missing or invalid photoId: [90mundefined[39m

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 400 when photoId is not a string
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: GET Query: { photoId: [33m123[39m }
[AI Enhancements GET] Missing or invalid photoId: [33m123[39m

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 404 when no enhancement is found
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: GET Query: { photoId: [32m'test-photo-id'[39m }
[AI Enhancements GET] Attempting to fetch data for key: photo_enhancement:test-photo-id

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 404 when no enhancement is found
[AI Enhancements GET] No data found for key photo_enhancement:test-photo-id.

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 200 with enhancement data when found
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: GET Query: { photoId: [32m'test-photo-id'[39m }
[AI Enhancements GET] Attempting to fetch data for key: photo_enhancement:test-photo-id

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 200 with enhancement data when found
[AI Enhancements GET] Data found for key photo_enhancement:test-photo-id: {
  photo_id: [32m'test-photo-id'[39m,
  user_id: [32m'test-user-id'[39m,
  ai_description: [32m'Test description'[39m,
  accepted_ai_tags: [ [32m'tag1'[39m, [32m'tag2'[39m ],
  created_at: [32m'2025-01-01T00:00:00.000Z'[39m,
  updated_at: [32m'2025-01-01T00:00:00.000Z'[39m
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 500 when KV throws an error
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: GET Query: { photoId: [32m'test-photo-id'[39m }
[AI Enhancements GET] Attempting to fetch data for key: photo_enhancement:test-photo-id

stderr | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > GET requests > should return 500 when KV throws an error
[AI Enhancements GET] Error fetching data for key photo_enhancement:test-photo-id: KV connection failed Error: KV connection failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/02-ai-enhancements.test.ts:108:21
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should return 400 when photoId is missing
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "userId": "test-user"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should return 400 when userId is missing
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should create new enhancement when none exists
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "test-user",
  "description": "New description",
  "suggestionSource": "OpenAI-GPT-4o"
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should create new enhancement when none exists
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "test-user",
  "accepted_ai_tags": [],
  "created_at": "2025-06-19T17:51:48.660Z",
  "updated_at": "2025-06-19T17:51:48.660Z",
  "suggestion_source": "OpenAI-GPT-4o",
  "ai_description": "New description"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should create new enhancement when none exists
API_POST_ENHANCEMENT: kv.set('photo_enhancement:test-photo') result: "OK"

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should update existing enhancement
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "new-user",
  "description": "Updated description",
  "tagToAdd": "new-tag"
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should update existing enhancement
API_POST_ENHANCEMENT: Added single tag "new-tag", tags now: [ [32m'existing-tag'[39m, [32m'new-tag'[39m ]
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "new-user",
  "ai_description": "Updated description",
  "accepted_ai_tags": [
    "existing-tag",
    "new-tag"
  ],
  "created_at": "2025-01-01T00:00:00.000Z",
  "updated_at": "2025-06-19T17:51:48.661Z",
  "suggestion_source": "Original-Source"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should update existing enhancement
API_POST_ENHANCEMENT: kv.set('photo_enhancement:test-photo') result: "OK"

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should not add duplicate tags
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "test-user",
  "tagToAdd": "existing-tag"
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should not add duplicate tags
API_POST_ENHANCEMENT: Added single tag "existing-tag", tags now: [ [32m'existing-tag'[39m ]
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "test-user",
  "ai_description": null,
  "accepted_ai_tags": [
    "existing-tag"
  ],
  "created_at": "2025-01-01T00:00:00.000Z",
  "updated_at": "2025-06-19T17:51:48.662Z"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should not add duplicate tags
API_POST_ENHANCEMENT: kv.set('photo_enhancement:test-photo') result: "OK"

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle null description explicitly
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "test-user",
  "description": null
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle null description explicitly
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "test-user",
  "accepted_ai_tags": [],
  "created_at": "2025-06-19T17:51:48.662Z",
  "updated_at": "2025-06-19T17:51:48.662Z",
  "suggestion_source": "Unknown",
  "ai_description": null
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle null description explicitly
API_POST_ENHANCEMENT: kv.set('photo_enhancement:test-photo') result: "OK"

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle acceptedAiTags array with filtering
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "test-user",
  "acceptedAiTags": [
    "valid-tag",
    "",
    "  ",
    "another-tag",
    null,
    "final-tag"
  ]
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle acceptedAiTags array with filtering
API_POST_ENHANCEMENT: Set accepted_ai_tags to: [ [32m'valid-tag'[39m, [32m'another-tag'[39m, [32m'final-tag'[39m ]
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "test-user",
  "accepted_ai_tags": [
    "valid-tag",
    "another-tag",
    "final-tag"
  ],
  "created_at": "2025-06-19T17:51:48.662Z",
  "updated_at": "2025-06-19T17:51:48.662Z",
  "suggestion_source": "Unknown"
}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should handle acceptedAiTags array with filtering
API_POST_ENHANCEMENT: kv.set('photo_enhancement:test-photo') result: "OK"

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should return 500 when KV fails during POST
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: POST Query: {}
API_POST_ENHANCEMENT: Received POST request. Body: {
  "photoId": "test-photo",
  "userId": "test-user"
}
API_POST_ENHANCEMENT: Generated key: 'photo_enhancement:test-photo' for photoId: 'test-photo'

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should return 500 when KV fails during POST
API_POST_ENHANCEMENT: Full enhancement data to save: {
  "photo_id": "test-photo",
  "user_id": "test-user",
  "accepted_ai_tags": [],
  "created_at": "2025-06-19T17:51:48.663Z",
  "updated_at": "2025-06-19T17:51:48.663Z",
  "suggestion_source": "Unknown"
}

stderr | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > POST requests > should return 500 when KV fails during POST
API_POST_ENHANCEMENT_ERROR: Error saving enhancement: Error: KV write failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/02-ai-enhancements.test.ts:288:36
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should return 400 when photoId is missing
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should return 400 when userId is missing
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should return 404 when no enhancement exists
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should remove specific tag
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should clear description when clearDescription is true
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should return no changes message when nothing to modify
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should handle kv errors during DELETE operation
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: DELETE Query: {}

stderr | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > DELETE requests > should handle kv errors during DELETE operation
Error deleting/clearing enhancement: Error: KV operation failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/02-ai-enhancements.test.ts:442:36
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | api/__tests__/02-ai-enhancements.test.ts > /api/ai-enhancements > Unsupported methods > should return 405 for unsupported methods
API_AI_ENHANCEMENTS_HANDLER: File execution started. Method: PUT Query: {}

 ✓ src/lib/queries/__tests__/photoQueries.test.ts (17 tests) 15ms
 ✓ api/__tests__/02-ai-enhancements.test.ts (21 tests) 19ms
stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > CORS and Method Handling > should handle OPTIONS requests for CORS
--- photo-tags-batch.ts function invoked ---

stdout | src/__tests__/App.test.tsx > App > Protected Routes > should redirect to login when no API key is present
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: No
ProtectedRoute: No API Key found, redirecting to /login

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > CORS and Method Handling > should return 405 for non-POST methods
--- photo-tags-batch.ts function invoked ---

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Request Validation > should return 400 when photoIds is missing
--- photo-tags-batch.ts function invoked ---

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Request Validation > should return 400 when photoIds is not an array
--- photo-tags-batch.ts function invoked ---

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Request Validation > should return 400 when photoIds is empty array
--- photo-tags-batch.ts function invoked ---

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Request Validation > should return 400 when apiKey is missing
--- photo-tags-batch.ts function invoked ---

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should fetch tags for multiple photos successfully
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 2 photos from CompanyCam API

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should fetch tags for multiple photos successfully
Fetched 2 tags for photo photo1
Fetched 1 tags for photo photo2

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should fetch tags for multiple photos successfully
Batch fetch complete: 2 photos processed, 0 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should handle photos with no tags (empty arrays)
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should handle photos with no tags (empty arrays)
Fetched 0 tags for photo photo1

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Successful Tag Fetching > should handle photos with no tags (empty arrays)
Batch fetch complete: 1 photos processed, 0 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle 404 responses (photos with no tags)
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle 404 responses (photos with no tags)
Fetched 0 tags for photo photo1

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle 404 responses (photos with no tags)
Batch fetch complete: 1 photos processed, 0 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle HTTP error responses
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle HTTP error responses
Error fetching tags for photo photo1: 500, Internal Server Error

stdout | src/__tests__/App.test.tsx > App > Protected Routes > should show HomePage when API key is present
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Protected Routes > should show HomePage when API key is empty string but truthy
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: No
ProtectedRoute: No API Key found, redirecting to /login

stdout | src/__tests__/App.test.tsx > App > Protected Routes > should show HomePage when API key is whitespace (truthy)
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Login Route > should show LoginPage on /login route regardless of API key
App component rendering - setting up routes

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle HTTP error responses
Error fetching tags for photo photo1: Error: HTTP 500: Internal Server Error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:56:18
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:243:15[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:42:11
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:247:9[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.request [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:39:23
    at new Promise (<anonymous>)

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle HTTP error responses
Batch fetch complete: 1 photos processed, 1 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle network errors
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stdout | src/__tests__/App.test.tsx > App > Login Route > should show LoginPage on /login route when no API key
App component rendering - setting up routes

stdout | src/__tests__/App.test.tsx > App > Route Fallbacks > should redirect unknown routes to home when API key exists
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle network errors
Request error fetching tags for photo photo1: Error: Network error
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:270:22[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:61:9
    at new Promise (<anonymous>)
    at fetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:27:10[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:105:28
    at Array.map (<anonymous>)
    at Module.handler [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:103:32[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:280:13

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle network errors
Error fetching tags for photo photo1: Error: Network error
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:270:22[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:61:9
    at new Promise (<anonymous>)
    at fetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:27:10[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:105:28
    at Array.map (<anonymous>)
    at Module.handler [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:103:32[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:280:13

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle network errors
Batch fetch complete: 1 photos processed, 1 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle JSON parsing errors
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle JSON parsing errors
Error parsing tags response for photo photo1: SyntaxError: Unexpected token 'i', "invalid json{" is not valid JSON
    at JSON.parse (<anonymous>)
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:45:38
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:309:15[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:42:11
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:313:9[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.request [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:39:23

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle JSON parsing errors
Fetched 0 tags for photo photo1

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle JSON parsing errors
Batch fetch complete: 1 photos processed, 0 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle individual photo fetch errors gracefully
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle individual photo fetch errors gracefully
Request error fetching tags for photo photo1: Error: Individual fetch error
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:336:22[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:61:9
    at new Promise (<anonymous>)
    at fetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:27:10[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:105:28
    at Array.map (<anonymous>)
    at Module.handler [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:103:32[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:346:13

stdout | src/__tests__/App.test.tsx > App > Route Fallbacks > should redirect unknown routes to login when no API key
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: No
ProtectedRoute: No API Key found, redirecting to /login

stderr | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle individual photo fetch errors gracefully
Error fetching tags for photo photo1: Error: Individual fetch error
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:336:22[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as on] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:61:9
    at new Promise (<anonymous>)
    at fetchPhotoTags [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:27:10[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:105:28
    at Array.map (<anonymous>)
    at Module.handler [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/photo-tags-batch.ts:103:32[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/photo-tags-batch.test.ts:346:13

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Error Handling > should handle individual photo fetch errors gracefully
Batch fetch complete: 1 photos processed, 1 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > API Request Details > should make correct API calls to CompanyCam
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 1 photos from CompanyCam API

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > API Request Details > should make correct API calls to CompanyCam
Fetched 0 tags for photo photo123

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > API Request Details > should make correct API calls to CompanyCam
Batch fetch complete: 1 photos processed, 0 errors

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Batch Processing > should process all photos in parallel
--- photo-tags-batch.ts function invoked ---
Batch fetching photo tags for 3 photos from CompanyCam API

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Batch Processing > should process all photos in parallel
Fetched 0 tags for photo photo1
Fetched 0 tags for photo photo2
Fetched 0 tags for photo photo3

stdout | api/__tests__/photo-tags-batch.test.ts > /api/photo-tags-batch > Batch Processing > should process all photos in parallel
Batch fetch complete: 3 photos processed, 0 errors

stdout | src/__tests__/App.test.tsx > App > Route Fallbacks > should handle deeply nested unknown routes
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Navigation Behavior > should respect replace navigation for protected route redirects
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: No
ProtectedRoute: No API Key found, redirecting to /login

stdout | src/__tests__/App.test.tsx > App > Navigation Behavior > should respect replace navigation for wildcard redirects
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Component Structure > should render main app container
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Component Structure > should render nested routes within protected route structure
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Multiple API Key Checks > should check localStorage each time ProtectedRoute renders
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: Yes

stdout | src/__tests__/App.test.tsx > App > Edge Cases > should handle localStorage returning undefined
App component rendering - setting up routes
ProtectedRoute: Checking for API Key. Found: No
ProtectedRoute: No API Key found, redirecting to /login

stdout | src/__tests__/App.test.tsx > App > Edge Cases > should handle localStorage throwing an error
App component rendering - setting up routes
App component rendering - setting up routes

 ✓ api/__tests__/photo-tags-batch.test.ts (15 tests) 14ms
 ✓ src/__tests__/App.test.tsx (16 tests) 63ms
stdout | src/hooks/__tests__/useNotificationManager.test.tsx
[companyCamService] Initializing...

stdout | src/hooks/__tests__/useNotificationManager.test.tsx > useNotificationManager > should dismiss a notification
[NotificationManager] Dismissed notification: 1

stdout | src/hooks/__tests__/useNotificationManager.test.tsx > useNotificationManager > should dismiss all notifications
[NotificationManager] Dismissed all notifications

 ✓ src/hooks/__tests__/useNotificationManager.test.tsx (6 tests) 15ms
stdout | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > error handling with photo actions > should handle partial failures in photo actions
[Scout AI] Analyzing [33m3[39m photos using enhanced visual similarity pipeline

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > error handling with photo actions > should handle partial failures in photo actions
[Scout AI] Analysis error: TypeError: Cannot read properties of undefined (reading 'length')
    at Object.analyzeSimilarPhotos [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:180:64[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:694:9

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > CORS and Method Handling > should handle OPTIONS requests for CORS
--- ai-enhancements-batch.ts function invoked ---

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > CORS and Method Handling > should return 405 for non-POST methods
--- ai-enhancements-batch.ts function invoked ---

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Request Validation > should return 400 when photoIds is missing
--- ai-enhancements-batch.ts function invoked ---

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Request Validation > should return 400 when photoIds is not an array
--- ai-enhancements-batch.ts function invoked ---

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Request Validation > should return 400 when photoIds is empty array
--- ai-enhancements-batch.ts function invoked ---

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > KV Store Integration > should return empty enhancements when no data exists in KV store
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 2 photos: [ [32m'photo1'[39m, [32m'photo2'[39m ]

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > KV Store Integration > should return empty enhancements when no data exists in KV store
No AI enhancement found for photo photo1
No AI enhancement found for photo photo2

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > KV Store Integration > should return empty enhancements when no data exists in KV store
Batch fetch complete: 0 enhancements, 0 errors

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should successfully fetch multiple AI enhancements from KV store
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 2 photos: [ [32m'photo1'[39m, [32m'photo2'[39m ]

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should successfully fetch multiple AI enhancements from KV store
Loaded AI enhancement for photo photo1
Loaded AI enhancement for photo photo2

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should successfully fetch multiple AI enhancements from KV store
Batch fetch complete: 2 enhancements, 0 errors

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle mixed scenarios - some enhancements exist, some dont
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 2 photos: [ [32m'photo1'[39m, [32m'photo3'[39m ]

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle mixed scenarios - some enhancements exist, some dont
Loaded AI enhancement for photo photo1
No AI enhancement found for photo photo3

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle mixed scenarios - some enhancements exist, some dont
Batch fetch complete: 1 enhancements, 0 errors

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle KV store errors gracefully
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 1 photos: [ [32m'photo1'[39m ]

stderr | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle KV store errors gracefully
Error fetching AI enhancement for photo1: Error: KV connection failed
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/ai-enhancements-batch.test.ts:194:43
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Enhancement Processing > should handle KV store errors gracefully
Batch fetch complete: 0 enhancements, 1 errors

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Batch Processing > should process multiple photos in parallel
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 3 photos: [ [32m'photo1'[39m, [32m'photo2'[39m, [32m'photo3'[39m ]

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Batch Processing > should process multiple photos in parallel
Loaded AI enhancement for photo photo1
No AI enhancement found for photo photo2
No AI enhancement found for photo photo3

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Batch Processing > should process multiple photos in parallel
Batch fetch complete: 1 enhancements, 0 errors

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Error Handling > should handle individual photo errors gracefully
--- ai-enhancements-batch.ts function invoked ---
Batch fetching AI enhancements for 1 photos: [ [32m'photo1'[39m ]

stderr | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Error Handling > should handle individual photo errors gracefully
Error fetching AI enhancement for photo1: Error: Unexpected error
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/ai-enhancements-batch.test.ts:246:43
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:154:11
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:26
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1887:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1853:10[90m)[39m
    at runTest [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1564:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m
    at runSuite [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1719:8[90m)[39m

stdout | api/__tests__/ai-enhancements-batch.test.ts > /api/ai-enhancements-batch > Error Handling > should handle individual photo errors gracefully
Batch fetch complete: 0 enhancements, 1 errors

 ✓ api/__tests__/ai-enhancements-batch.test.ts (11 tests) 15ms
 ✓ src/utils/__tests__/photoActions.test.ts (14 tests) 5ms
stdout | src/utils/__tests__/photoSimilarity.test.ts > photoSimilarity utilities > calculatePhotoSimilarity > should return perfect similarity for identical photos
[DEBUG] Similarity breakdown for photo-1 vs photo-1: {
  visual: [32m'1.000'[39m,
  content: [32m'0.920'[39m,
  temporal: [32m'1.000'[39m,
  spatial: [32m'1.000'[39m,
  semantic: [32m'1.000'[39m,
  overall: [32m'1.000'[39m,
  photo1_desc: [32m'Roofing progress photo...'[39m,
  photo2_desc: [32m'Roofing progress photo...'[39m
}

stdout | src/utils/__tests__/photoSimilarity.test.ts > photoSimilarity utilities > groupSimilarPhotos > should group similar photos together
[VisualSimilarity] High similarity pair photo-1 & photo-2: overall=0.897, visual=0.900, temporal=0.850, spatial=0.920, threshold=0.6

stdout | src/utils/__tests__/photoSimilarity.test.ts > photoSimilarity utilities > groupSimilarPhotos > should respect similarity threshold
[VisualSimilarity] High similarity pair photo-1 & photo-2: overall=0.897, visual=0.900, temporal=0.850, spatial=0.920, threshold=0.95
[VisualSimilarity] High similarity pair photo-1 & photo-2: overall=0.897, visual=0.900, temporal=0.850, spatial=0.920, threshold=0.3

stdout | src/utils/__tests__/photoSimilarity.test.ts > photoSimilarity utilities > groupSimilarPhotos > should assign appropriate group types
[VisualSimilarity] High similarity pair photo-1 & photo-2: overall=0.897, visual=0.900, temporal=0.850, spatial=0.920, threshold=0.6

stdout | src/utils/__tests__/photoSimilarity.test.ts > photoSimilarity utilities > groupSimilarPhotos > should include confidence scores
[VisualSimilarity] High similarity pair photo-1 & photo-2: overall=0.897, visual=0.900, temporal=0.850, spatial=0.920, threshold=0.6

 ✓ src/utils/__tests__/photoSimilarity.test.ts (18 tests) 5ms
 ✓ src/utils/__tests__/curationLogic.test.ts (17 tests) 4ms
 ✓ src/utils/__tests__/retentionCleanup.test.ts (13 tests) 6ms
 ✓ src/__tests__/types.test.ts (12 tests) 4ms
stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Google Vision API call successful.
generateEmbeddings called with labels: [33m2[39m and web entities: [33m1[39m
Text for OpenAI embedding (length: 28): "Roof, Building, Construction"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Attempting to query Pinecone vector memory. UserID: test-user

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
No matches found in Pinecone for the given embedding.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 2, Web entities: 1, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Roof, Building\nWeb Entities: Construction\nBased on all the provided informat...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Raw GPT JSON response: {"suggested_tags":["roofing","building"],"suggested_description":"Roofing work on building structure."}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'roofing'[39m, [32m'building'[39m ],
  suggestedDescription: [32m'Roofing work on building structure.'[39m,
  checklistTriggers: [],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["roofing","building"],"suggested_description":"Roofing work on building structure."}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Roof, Building\n'[39m +
        [32m'Web Entities: Construction\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should successfully process Google Vision response
Successfully generated AI suggestions.

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > successful API calls > should use existing API key from test environment
Fetching your user data from https://api.companycam.com/v2/users/current...

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > successful API calls > should use existing API key from test environment

Successfully fetched your user data:
{
  "id": "456",
  "name": "Test User with API Key"
}

Your User ID is: 456
You can use this as VITE_APP_DEFAULT_USER_ID in your .env file for testing Step 4.

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > successful API calls > should handle user data without id field
Fetching your user data from https://api.companycam.com/v2/users/current...

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > successful API calls > should handle user data without id field

Successfully fetched your user data:
{
  "name": "No ID User",
  "email": "noid@example.com"
}

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > successful API calls > should handle user data without id field

Could not find "id" in the user data response.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should handle Google Vision API errors
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should handle Google Vision API errors
Error during Google Vision API request: Network timeout

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 401 unauthorized error
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 401 unauthorized error

Error fetching your user data:
API Error 401: Unauthorized. Body: Error response body

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 404 not found error
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 404 not found error

Error fetching your user data:
API Error 404: Not Found. Body: Error response body

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 500 server error
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API error handling > should handle 500 server error

Error fetching your user data:
API Error 500: Internal Server Error. Body: Error response body

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > network error handling > should handle fetch network errors
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > network error handling > should handle fetch network errors

Error fetching your user data:
Network error: connection failed

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > network error handling > should handle JSON parsing errors
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > network error handling > should handle JSON parsing errors

Error fetching your user data:
Invalid JSON

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API key behavior > should handle API key from environment and get unauthorized response
Fetching your user data from https://api.companycam.com/v2/users/current...

stderr | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > API key behavior > should handle API key from environment and get unauthorized response

Error fetching your user data:
API Error 401: Unauthorized. Body: Error response body

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > console output verification > should log correct startup message
Fetching your user data from https://api.companycam.com/v2/users/current...

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > console output verification > should log correct startup message

Successfully fetched your user data:
{
  "id": "123"
}

Your User ID is: 123
You can use this as VITE_APP_DEFAULT_USER_ID in your .env file for testing Step 4.

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > console output verification > should log success messages with user data
Fetching your user data from https://api.companycam.com/v2/users/current...

stdout | __tests__/fetch-my-user-data.test.js > fetch-my-user-data.js > console output verification > should log success messages with user data

Successfully fetched your user data:
{
  "id": "789",
  "name": "Console Test User"
}

Your User ID is: 789
You can use this as VITE_APP_DEFAULT_USER_ID in your .env file for testing Step 4.

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should handle Google Vision API errors
Error in AI suggestion pipeline: Google Vision API request failed: Network timeout Error: Google Vision API request failed: Network timeout
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:564:16
    at Object.<anonymous> (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:206:11)
    at Object.mockCall (file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/spy/dist/index.js:89:15)
    at Object.spy [as on] (file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/tinyspy/dist/index.js:47:103)
    at visionApiResponse (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:562:16)
    at new Promise (<anonymous>)
    at handler (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:542:37)
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:220:13
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should handle Google Vision error responses
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/invalid.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Google Vision API Integration > should handle Google Vision error responses
Google Vision API returned an error object: { code: [33m400[39m, message: [32m'Invalid image format'[39m }
Error in AI suggestion pipeline: Vision API Error: Invalid image format (Code: 400) Error: Vision API Error: Invalid image format (Code: 400)
    at handler (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:577:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:250:7
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Attempting to query Pinecone vector memory. UserID: test-user

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
No matches found in Pinecone for the given embedding.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nBased on all the provided information (image, la...

 ✓ __tests__/fetch-my-user-data.test.js (11 tests) 11ms
stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Raw GPT JSON response: {"suggested_tags":["construction","building"],"suggested_description":"Construction site building work.","checklist_triggers":["safety_check"]}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'construction'[39m, [32m'building'[39m ],
  suggestedDescription: [32m'Construction site building work.'[39m,
  checklistTriggers: [ [32m'safety_check'[39m ],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["construction","building"],"suggested_description":"Construction site building work.","checklist_triggers":["safety_check"]}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Building\n'[39m +
        [32m'Web Entities: None\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should generate embeddings and call GPT successfully
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle OpenAI embeddings errors
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle OpenAI embeddings errors
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle OpenAI embeddings errors
Error calling OpenAI Embeddings API: OpenAI API quota exceeded Error: OpenAI API quota exceeded
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:329:9
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle OpenAI embeddings errors
Error in AI suggestion pipeline: OpenAI Embeddings API error: OpenAI API quota exceeded Error: OpenAI Embeddings API error: OpenAI API quota exceeded
    at generateEmbeddings (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:173:11)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at handler (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:582:23)
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:339:7
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Attempting to query Pinecone vector memory. UserID: test-user

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
No matches found in Pinecone for the given embedding.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nBased on all the provided information (image, la...

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Model overloaded Error: Model overloaded
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:356:9
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle GPT response errors gracefully
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Attempting to query Pinecone vector memory. UserID: test-user

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
No matches found in Pinecone for the given embedding.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nBased on all the provided information (image, la...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Raw GPT JSON response: This is not valid JSON!

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Failed to parse JSON response from GPT: SyntaxError: Unexpected token 'T', "This is no"... is not valid JSON
    at JSON.parse (<anonymous>)
    at callGptForSuggestions [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/suggest-ai-tags.ts:330:28[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at handler [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/suggest-ai-tags.ts:614:30[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/04-suggest-ai-tags-full.test.ts:404:7
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20
GPT Raw Content that failed parsing: This is not valid JSON!
Failed to parse JSON response from GPT. Error: Failed to parse JSON response from GPT.
    at callGptForSuggestions (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:334:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at handler (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:614:30)
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/04-suggest-ai-tags-full.test.ts:404:7
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > OpenAI Integration > should handle invalid JSON from GPT
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Attempting to query Pinecone vector memory. UserID: test-user

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Found 2 matches in Pinecone.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 2

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nRelevant Examples from Past Projects (use these ...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Raw GPT JSON response: {"suggested_tags":["roofing","commercial"],"suggested_description":"Commercial roofing work in progress."}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'roofing'[39m, [32m'commercial'[39m ],
  suggestedDescription: [32m'Commercial roofing work in progress.'[39m,
  checklistTriggers: [],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["roofing","commercial"],"suggested_description":"Commercial roofing work in progress."}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Building\n'[39m +
        [32m'Web Entities: None\n'[39m +
        [32m'Relevant Examples from Past Projects (use these for context and style):\n'[39m +
        [32m'- "Commercial roofing project completed successfully" (similarity: 0.95)\n'[39m +
        [32m'- "HVAC installation on office building" (similarity: 0.88)\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should query Pinecone and use results in GPT prompt
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Attempting to query Pinecone vector memory. UserID: test-user

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Error querying Pinecone: Error: Pinecone timeout
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mapi/__tests__/04-suggest-ai-tags-full.test.ts:487:49
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nBased on all the provided information (image, la...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Raw GPT JSON response: {"suggested_tags":["building"],"suggested_description":"Building construction work."}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'building'[39m ],
  suggestedDescription: [32m'Building construction work.'[39m,
  checklistTriggers: [],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["building"],"suggested_description":"Building construction work."}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Building\n'[39m +
        [32m'Web Entities: None\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should handle Pinecone errors gracefully
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: test-photo, Photo URL: https://example.com/photo.jpg, ProjectID: N/A, UserID: test-user
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Google Vision API call successful.
generateEmbeddings called with labels: [33m1[39m and web entities: [33m0[39m
Text for OpenAI embedding (length: 8): "Building"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Attempting to query Pinecone vector memory. UserID: test-user

stderr | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Pinecone API key, environment, or index name is not configured in environment variables.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 1, Web entities: 0, Memory chunks: 0

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/photo.jpg UserID: test-user
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Building\nWeb Entities: None\nBased on all the provided information (image, la...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Raw GPT JSON response: {"suggested_tags":["building"],"suggested_description":"Building construction."}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'building'[39m ],
  suggestedDescription: [32m'Building construction.'[39m,
  checklistTriggers: [],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["building"],"suggested_description":"Building construction."}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Building\n'[39m +
        [32m'Web Entities: None\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Pinecone Integration > should work when Pinecone is not configured
Successfully generated AI suggestions.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
--- suggest-ai-tags.ts (TypeScript) function invoked ---
Received request for AI suggestions. PhotoID: roof-project-456, Photo URL: https://example.com/roofing-photo.jpg, ProjectID: residential-roof-789, UserID: contractor-123
Attempting to call Google Vision API...
Google Vision API Response Status: 200

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Google Vision API call successful.
generateEmbeddings called with labels: [33m3[39m and web entities: [33m2[39m
Text for OpenAI embedding (length: 68): "Roof, Shingles, Ladder, Roofing contractor, Residential construction"

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Successfully generated embedding from OpenAI.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Attempting to query Pinecone vector memory. UserID: contractor-123

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Found 1 matches in Pinecone.

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Assembling GPT prompt. User: undefined undefined, Project: N/A. Vision labels: 3, Web entities: 2, Memory chunks: 1

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Attempting to call OpenAI GPT for suggestions. PhotoURL: https://example.com/roofing-photo.jpg UserID: contractor-123
Calling OpenAI gpt-4o with prompt: [
  {
    "type": "text",
    "text": "Analyze the following image and its associated metadata to generate suggestions.\nImage URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/roofing-photo.jpg\nStandard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n- roofing\n- hvac\n- plumbing\n- electrical\n- siding\nImage Labels: Roof, Shingles, Ladder\nWeb Entities: Roofing contractor, Residential ...

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Raw GPT JSON response: {"suggested_tags":["roofing","shingles","residential","installation"],"suggested_description":"Residential roofing installation with asphalt shingles in progress.","checklist_triggers":["safety_harness_check","weather_conditions"]}
Successfully parsed suggestions from GPT: {
  suggestedTags: [ [32m'roofing'[39m, [32m'shingles'[39m, [32m'residential'[39m, [32m'installation'[39m ],
  suggestedDescription: [32m'Residential roofing installation with asphalt shingles in progress.'[39m,
  checklistTriggers: [ [32m'safety_harness_check'[39m, [32m'weather_conditions'[39m ],
  debugInfo: {
    gptModel: [32m'gpt-4o'[39m,
    rawGptResponse: [32m'{"suggested_tags":["roofing","shingles","residential","installation"],"suggested_description":"Residential roofing installation with asphalt shingles in progress.","checklist_triggers":["safety_harness_check","weather_conditions"]}'[39m,
    promptMessages: [
      [32m'Analyze the following image and its associated metadata to generate suggestions.\n'[39m +
        [32m'Image URL (for your reference if needed, but prioritize labels/entities/memories for text generation): https://example.com/roofing-photo.jpg\n'[39m +
        [32m'Standard CompanyCam Tags (consider these for consistency; suggest new ones if more appropriate):\n'[39m +
        [32m'- roofing\n'[39m +
        [32m'- hvac\n'[39m +
        [32m'- plumbing\n'[39m +
        [32m'- electrical\n'[39m +
        [32m'- siding\n'[39m +
        [32m'Image Labels: Roof, Shingles, Ladder\n'[39m +
        [32m'Web Entities: Roofing contractor, Residential construction\n'[39m +
        [32m'Relevant Examples from Past Projects (use these for context and style):\n'[39m +
        [32m'- "Residential roof replacement with asphalt shingles completed" (similarity: 0.92)\n'[39m +
        [32m'Based on all the provided information (image, labels, web entities, past examples, and standard CompanyCam tags), generate your suggestions strictly in the specified JSON format.'[39m
    ]
  }
}

stdout | api/__tests__/04-suggest-ai-tags-full.test.ts > /api/suggest-ai-tags - Full AI Pipeline > Complete AI Pipeline > should execute full pipeline with all services
Successfully generated AI suggestions.

 ✓ api/__tests__/04-suggest-ai-tags-full.test.ts (11 tests) 23ms
stdout | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should handle OPTIONS requests for CORS
--- suggest-ai-tags.ts (TypeScript) function invoked ---

stdout | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 405 for non-POST methods
--- suggest-ai-tags.ts (TypeScript) function invoked ---

stderr | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 500 when CompanyCam API key is missing
CompanyCam API key is not configured.

stdout | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 500 when Google Vision API key is missing
--- suggest-ai-tags.ts (TypeScript) function invoked ---

stderr | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 500 when Google Vision API key is missing
Google Cloud Vision API key is not configured.

stdout | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 500 when required request body fields are missing
--- suggest-ai-tags.ts (TypeScript) function invoked ---

stderr | api/__tests__/01-suggest-ai-tags-simple.test.ts > /api/suggest-ai-tags - Basic Tests > Request validation > should return 500 when required request body fields are missing
Error in AI suggestion pipeline: Missing photoId or photoUrl in request body Error: Missing photoId or photoUrl in request body
    at handler (/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/suggest-ai-tags.ts:488:13)
    at /Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/api/__tests__/01-suggest-ai-tags-simple.test.ts:118:13
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/node_modules/@vitest/runner/dist/chunk-hooks.js:751:20

 ✓ api/__tests__/01-suggest-ai-tags-simple.test.ts (5 tests) 136ms
stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > localStorage error handling > should handle localStorage setItem errors gracefully
[Scout AI] Failed to load user preferences: Error: Storage quota exceeded
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:723:15[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as setItem] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at loadUserPreferences [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:111:24[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:128:7
    at Object.react-stack-bottom-frame [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:23949:20[90m)[39m
    at runWithFiberInDEV [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:1522:13[90m)[39m
    at commitHookEffectListMount [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:11905:29[90m)[39m
    at commitHookPassiveMountEffects [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:12028:11[90m)[39m
    at commitPassiveMountOnFiber [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom-client.development.js:13841:13[90m)[39m

stderr | src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > localStorage error handling > should handle localStorage setItem errors gracefully
[Scout AI] Failed to update preferences: Error: Storage quota exceeded
    at Object.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:723:15[90m)[39m
    at Object.mockCall [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:89:15[90m)[39m
    at Object.spy [as setItem] [90m(file:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at Object.updateUserPreferences [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/ScoutAiContext.tsx:379:20[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:749:28
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@testing-library[24m/react/dist/act-compat.js:48:24
    at process.env.NODE_ENV.exports.act [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4mreact[24m/cjs/react.development.js:789:22[90m)[39m
    at Proxy.<anonymous> [90m(/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@testing-library[24m/react/dist/act-compat.js:47:25[90m)[39m
    at [90m/Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39msrc/contexts/__tests__/ScoutAiContext.test.tsx:748:13
    at [90mfile:///Users/markhustad/Projects/companycam/cc-ai-photo-inspirations/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:751:20

 ❯ src/contexts/__tests__/ScoutAiContext.test.tsx (21 tests | 4 failed) 4187ms
   ✓ ScoutAiContext > Provider initialization > should provide context with initial state 22ms
   ✓ ScoutAiContext > Provider initialization > should load user preferences from localStorage on mount 6ms
   ✓ ScoutAiContext > Provider initialization > should handle missing localStorage preferences gracefully 3ms
   ✓ ScoutAiContext > analyzeSimilarPhotos > should set analyzing state during photo analysis 19ms
   × ScoutAiContext > analyzeSimilarPhotos > should generate suggestions when similar photos are found 1016ms
     → [2mexpect([22m[31melement[39m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  1[39m
Received:
[31m  0[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   × ScoutAiContext > analyzeSimilarPhotos > should handle errors during analysis gracefully 1008ms
     → [2mexpect([22m[31melement[39m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  Analysis failed[39m
Received:
[31m  Cannot read properties of undefined (reading 'length')[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ ScoutAiContext > analyzeSimilarPhotos > should not generate suggestions when no similar photos found 18ms
   ✓ ScoutAiContext > suggestion management > should handle accepting suggestions 7ms
   ✓ ScoutAiContext > suggestion management > should handle rejecting suggestions 3ms
   ✓ ScoutAiContext > suggestion management > should handle dismissing suggestions 4ms
   ✓ ScoutAiContext > error handling > should throw error when useScoutAi used outside provider 6ms
   ✓ ScoutAiContext > user preferences > should update user preferences and persist to localStorage 3ms
   × ScoutAiContext > photo actions > should accept suggestions with photo actions 1016ms
     → expected [] to have a length of 1 but got +0

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ ScoutAiContext > photo actions > should handle accept suggestion errors 4ms
   ✓ ScoutAiContext > photo actions > should archive photos 4ms
   ✓ ScoutAiContext > photo actions > should restore photos 4ms
   ✓ ScoutAiContext > photo actions > should apply curation actions directly 5ms
   ✓ ScoutAiContext > suggestion generation > should generate suggestions from similarity groups 9ms
   ✓ ScoutAiContext > suggestion generation > should set medium confidence for lower confidence recommendations 6ms
   × ScoutAiContext > error handling with photo actions > should handle partial failures in photo actions 1014ms
     → expected [] to have a length of 1 but got +0

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ ScoutAiContext > localStorage error handling > should handle localStorage setItem errors gracefully 10ms

⎯⎯⎯⎯⎯⎯ Failed Tests 27 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should fetch photos with default parameters
AssertionError: expected "wrap" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st wrap call:

[22m[33m@@ -6,8 +6,9 @@[90m
[2m        "Content-Type": "application/json",[22m
[2m      },[22m
[2m      "params": {[22m
[2m        "page": 1,[22m
[2m        "per_page": 20,[22m
[31m+       "sort": "-created_at",[90m
[2m      },[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/__tests__/03-companyCamService.test.ts:50:31
     48|       const result = await companyCamService.getPhotos(mockApiKey)
     49| 
     50|       expect(mockedAxios.get).toHaveBeenCalledWith(
       |                               ^
     51|         `${baseUrl}/photos`,
     52|         {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should fetch photos with custom parameters
AssertionError: expected "wrap" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st wrap call:

[22m[33m@@ -6,10 +6,11 @@[90m
[2m        "Content-Type": "application/json",[22m
[2m      },[22m
[2m      "params": {[22m
[2m        "page": 2,[22m
[2m        "per_page": 50,[22m
[31m+       "sort": "-created_at",[90m
[2m        "tag_ids": [[22m
[2m          "tag1",[22m
[2m          "tag2",[22m
[2m        ],[22m
[2m      },[22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/__tests__/03-companyCamService.test.ts:72:31
     70|       await companyCamService.getPhotos(mockApiKey, 2, 50, ['tag1', 't…
     71| 
     72|       expect(mockedAxios.get).toHaveBeenCalledWith(
       |                               ^
     73|         `${baseUrl}/photos`,
     74|         {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should handle axios errors
AssertionError: promise resolved "[ { id: 'photo-1', …(15) } ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "captured_at": 1640995200000,
    "company_id": "company-1",
    "coordinates": [],
    "created_at": 1640995200000,
    "creator_id": "user-1",
    "creator_name": "John Doe",
    "creator_type": "user",
    "description": "Test photo",
    "hash": "hash123",
    "id": "photo-1",
    "internal": false,
    "photo_url": "https://example.com/photo1.jpg",
    "processing_status": "processed",
    "project_id": "project-1",
    "updated_at": 1640995200000,
    "uris": [],
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:92:59
     90|       mockedAxios.get.mockRejectedValue(mockError)
     91| 
     92|       await expect(companyCamService.getPhotos(mockApiKey)).rejects.to…
       |                                                           ^
     93|     })
     94| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotos > should handle axios error responses
AssertionError: promise resolved "[ { id: 'photo-1', …(15) } ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "captured_at": 1640995200000,
    "company_id": "company-1",
    "coordinates": [],
    "created_at": 1640995200000,
    "creator_id": "user-1",
    "creator_name": "John Doe",
    "creator_type": "user",
    "description": "Test photo",
    "hash": "hash123",
    "id": "photo-1",
    "internal": false,
    "photo_url": "https://example.com/photo1.jpg",
    "processing_status": "processed",
    "project_id": "project-1",
    "updated_at": 1640995200000,
    "uris": [],
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:108:59
    106|       mockedAxios.get.mockRejectedValue(axiosError)
    107| 
    108|       await expect(companyCamService.getPhotos(mockApiKey)).rejects.to…
       |                                                           ^
    109|     })
    110|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotoTags > should return empty array for 404 errors
AssertionError: expected [ { id: 'tag-1', …(5) } ] to deeply equal []

[32m- Expected[39m
[31m+ Received[39m

[32m- [][39m
[31m+ [[39m
[31m+   {[39m
[31m+     "company_id": "company-1",[39m
[31m+     "created_at": 1640995200000,[39m
[31m+     "display_value": "Roofing",[39m
[31m+     "id": "tag-1",[39m
[31m+     "updated_at": 1640995200000,[39m
[31m+     "value": "roofing",[39m
[31m+   },[39m
[31m+ ][39m

 ❯ src/__tests__/03-companyCamService.test.ts:155:22
    153|       const result = await companyCamService.getPhotoTags(mockApiKey, …
    154| 
    155|       expect(result).toEqual([])
       |                      ^
    156|     })
    157| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > getPhotoTags > should throw non-404 errors
AssertionError: promise resolved "[ { id: 'tag-1', …(5) } ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "Roofing",
    "id": "tag-1",
    "updated_at": 1640995200000,
    "value": "roofing",
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:168:71
    166|       mockedAxios.get.mockRejectedValue(axiosError)
    167| 
    168|       await expect(companyCamService.getPhotoTags(mockApiKey, photoId)…
       |                                                                       ^
    169|     })
    170|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > listCompanyCamTags > should handle errors when fetching tags
AssertionError: promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "Roofing",
    "id": "tag-1",
    "updated_at": 1640995200000,
    "value": "roofing",
  },
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "HVAC",
    "id": "tag-2",
    "updated_at": 1640995200000,
    "value": "hvac",
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:213:68
    211|       mockedAxios.get.mockRejectedValue(mockError)
    212| 
    213|       await expect(companyCamService.listCompanyCamTags(mockApiKey)).r…
       |                                                                    ^
    214|     })
    215|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle Axios errors in listCompanyCamTags
AssertionError: promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "Roofing",
    "id": "tag-1",
    "updated_at": 1640995200000,
    "value": "roofing",
  },
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "HVAC",
    "id": "tag-2",
    "updated_at": 1640995200000,
    "value": "hvac",
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:460:68
    458|       mockedAxios.get.mockRejectedValue(mockAxiosError)
    459| 
    460|       await expect(companyCamService.listCompanyCamTags(mockApiKey)).r…
       |                                                                    ^
    461|       expect(mockAxiosError.toJSON).toHaveBeenCalled()
    462|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle generic errors in listCompanyCamTags
AssertionError: promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "Roofing",
    "id": "tag-1",
    "updated_at": 1640995200000,
    "value": "roofing",
  },
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "HVAC",
    "id": "tag-2",
    "updated_at": 1640995200000,
    "value": "hvac",
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:469:68
    467|       mockedAxios.get.mockRejectedValue(genericError)
    468| 
    469|       await expect(companyCamService.listCompanyCamTags(mockApiKey)).r…
       |                                                                    ^
    470|     })
    471| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/27]⎯

 FAIL  src/__tests__/03-companyCamService.test.ts > companyCamService > Error Handling Coverage > should handle unknown errors in listCompanyCamTags
AssertionError: promise resolved "[ { id: 'tag-1', …(5) }, …(1) ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "Roofing",
    "id": "tag-1",
    "updated_at": 1640995200000,
    "value": "roofing",
  },
  {
    "company_id": "company-1",
    "created_at": 1640995200000,
    "display_value": "HVAC",
    "id": "tag-2",
    "updated_at": 1640995200000,
    "value": "hvac",
  },
]

 ❯ src/__tests__/03-companyCamService.test.ts:477:68
    475|       mockedAxios.get.mockRejectedValue(unknownError)
    476| 
    477|       await expect(companyCamService.listCompanyCamTags(mockApiKey)).r…
       |                                                                    ^
    478|     })
    479|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/27]⎯

 FAIL  src/lib/__tests__/queryClient.test.ts > queryClient > should have correct default options
AssertionError: expected 600000 to be 300000 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 300000[39m
[31m+ 600000[39m

 ❯ src/lib/__tests__/queryClient.test.ts:19:47
     17|     const defaultOptions = queryClient.getDefaultOptions();
     18|     
     19|     expect(defaultOptions.queries?.staleTime).toBe(5 * 60 * 1000); // …
       |                                               ^
     20|     expect(defaultOptions.queries?.gcTime).toBe(10 * 60 * 1000); // 10…
     21|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/27]⎯

 FAIL  src/pages/__tests__/HomePage.test.tsx > HomePage > Basic Rendering > should render HomePage with user logged in
TestingLibraryElementError: Found multiple elements with the text: Scout AI

Here are the matching elements:

Ignored nodes: comments, script, style
[36m<h1[39m
  [33mclass[39m=[32m"text-2xl sm:text-3xl font-bold text-sky-400"[39m
[36m>[39m
  [0mScout AI[0m
[36m</h1>[39m

Ignored nodes: comments, script, style
[36m<h3[39m
  [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
[36m>[39m
  [0mScout AI[0m
[36m</h3>[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mdata-testid[39m=[32m"browser-router"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"flex flex-col min-h-screen"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col md:flex-row md:justify-between md:items-center p-4 bg-gray-900 text-white space-y-4 md:space-y-0"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center justify-center md:justify-start space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 sm:w-12 sm:h-12 rounded-full object-cover shadow-lg"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"text-2xl sm:text-3xl font-bold text-sky-400"[39m
            [36m>[39m
              [0mScout AI[0m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"text-center md:text-right"[39m
          [36m>[39m
            [36m<div>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"text-base sm:text-lg font-light"[39m
              [36m>[39m
                [0mWelcome, [0m
                [36m<span[39m
                  [33mclass[39m=[32m"font-semibold"[39m
                [36m>[39m
                  [0mTest[0m
                [36m</span>[39m
                [0m![0m
              [36m</h2>[39m
              [36m<button[39m
                [33mclass[39m=[32m"mt-2 text-xs text-sky-400 hover:text-sky-300 underline"[39m
              [36m>[39m
                [0mLogout[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"p-5 font-sans"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-6 text-center"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"px-6 py-2.5 bg-sky-600 text-white rounded-lg hover:bg-sky-500 disabled:bg-gray-600 disabled:opacity-70 transition-all duration-150 ease-in-out shadow-md hover:shadow-lg transform hover:scale-105"[39m
            [36m>[39m
              [0mRefresh Photos[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"space-y-4"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Scout AI"[39m
                    [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
                    [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
                  [36m/>[39m
                  [36m<div>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
                    [36m>[39m
                      [0mScout AI[0m
                    [36m</h3>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"text-sm text-blue-700"[39m
                    [36m>[39m
                      [0m1 photos loaded[0m
                    [36m</p>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m""[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                      [33mdisabled[39m=[32m""[39m
                    [36m>[39m
                      [0mNeed 2+ Photos[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-blue-700 text-sm"[39m
              [36m>[39m
                [0m💡 Load at least 2 photos to use Scout AI analysis[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-6"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-white border border-gray-200 rounded-lg shadow-sm "[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"p-6"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center justify-between mb-6"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-lg font-medium text-gray-900"[39m
                    [36m>[39m
                      [0mRetention Policy[0m
                    [36m</h3>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"mt-1 text-sm text-gray-500"[39m
                    [36m>[39m
                      [0mConfigure automatic deletion of archived photos[0m
                    [36m</p>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex items-center"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"text-sm text-gray-500 mr-3"[39m
                    [36m>[39m
                      [0mEnabled[0m
                    [36m</span>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"bg-indigo-600 text-white px-3 py-1 text-sm rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"[39m
                      [33mtype[39m=[32m"button"[39m
                    [36m>[39m
                      [0mEdit[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"space-y-4"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"grid grid-cols-1 md:grid-cols-3 gap-4"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mArchive Retention[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m30[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays[0m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mDeletion Grace Period[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m7[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays[0m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"bg-gray-50 rounded-lg p-4"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
                      [36m>[39m
                        [0mWarning Notice[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-2xl font-bold text-gray-900"[39m
                      [36m>[39m
                        [0m3[0m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"text-sm text-gray-500"[39m
                      [36m>[39m
                        [0mdays before[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-md p-4"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"flex"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"flex-shrink-0"[39m
                      [36m>[39m
                        [36m<svg[39m
                          [33mclass[39m=[32m"h-5 w-5 text-blue-400"[39m
                          [33mfill[39m=[32m"currentColor"[39m
                          [33mviewBox[39m=[32m"0 0 20 20"[39m
                        [36m>[39m
                          [36m<path[39m
                            [33mclip-rule[39m=[32m"evenodd"[39m
                            [33md[39m=[32m"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"[39m
                            [33mfill-rule[39m=[32m"evenodd"[39m
                          [36m/>[39m
                        [36m</svg>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"ml-3"[39m
                      [36m>[39m
                        [36m<h3[39m
                          [33mclass[39m=[32m"text-sm font-medium text-blue-800"[39m
                        [36m>[39m
                          [0mHow it works[0m
                        [36m</h3>[39m
                        [36m<div[39m
                          [33mclass[39m=[32m"mt-2 text-sm text-blue-700"[39m
                        [36m>[39m
                          [36m<p>[39m
                            [0mArchived photos are automatically marked for deletion after [0m
                            [0m30[0m
                            [0m days, then permanently removed after an additional [0m
                            [0m7[0m
                            [0m day grace period. You'll receive notifications [0m
                            [0m3[0m
                            [0m days before deletion.[0m
                          [36m</p>[39m
                        [36m</div>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-gray-800 border border-gray-700 p-4 rounded-lg cursor-pointer shadow-md hover:shadow-xl transition-shadow duration-200 ease-in-out flex flex-col text-gray-300"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"w-full h-48 rounded-md mb-3 bg-gray-700 flex items-center justify-center overflow-hidden"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Test photo"[39m
                  [33mclass[39m=[32m"w-full h-full object-cover"[39m
                  [33msrc[39m=[32m"https://example.com/photo.jpg"[39m
                [36m/>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col flex-grow"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"text-lg font-semibold text-gray-100 mb-1 mt-2 truncate"[39m
                  [33mtitle[39m=[32m"Photo ID: photo-1"[39m
                [36m>[39m
                  [0mPhoto ID: photo-1[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-sm text-gray-400 mb-1 truncate"[39m
                [36m>[39m
                  [0mBy: [0m
                  [0mJohn Doe[0m
                [36m</p>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-sm text-gray-300 mt-1 mb-2 line-clamp-2"[39m
                  [33mtitle[39m=[32m"Test photo"[39m
                [36m>[39m
                  [0mTest photo[0m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-auto pt-2 flex flex-wrap gap-2 mb-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs text-gray-500 italic"[39m
                  [36m>[39m
                    [0mNo tags[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mt-3 pt-3 border-t border-gray-600"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex justify-center"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"mt-2 px-6 py-2.5 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 flex items-center justify-center space-x-1.5 transition-colors duration-150 ease-in-out group"[39m
                    [36m>[39m
                      [36m<svg[39m
                        [33mclass[39m=[32m"h-4 w-4 mr-1.5"[39m
                        [33mfill[39m=[32m"currentColor"[39m
                        [33mviewBox[39m=[32m"0 0 20 20"[39m
                        [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                      [36m>[39m
                        [36m<path[39m
                          [33md[39m=[32m"M10 3.5a1.5 1.5 0 011.5 1.5v1a1.5 1.5 0 01-3 0v-1A1.5 1.5 0 0110 3.5zM3.188 8.044A5.5 5.5 0 0110 4.5h.008a5.5 5.5 0 016.804 3.544l.002.005.003.005a4.502 4.502 0 01-.82 4.44l-2.67 3.523a1.5 1.5 0 01-2.331.12l-2.67-3.523a4.502 4.502 0 01-.82-4.44l.002-.005.003-.005zM10 13a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"[39m
                        [36m/>[39m
                      [36m</svg>[39m
                      [36m<span>[39m
                        [0mSuggest AI Tags[0m
                      [36m</span>[39m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/pages/__tests__/HomePage.test.tsx:261:21
    259|       renderHomePage()
    260|       
    261|       expect(screen.getByText('Scout AI')).toBeInTheDocument()
       |                     ^
    262|       expect(screen.getByText((content, element) => {
    263|         return element?.textContent === 'Welcome, Test!'

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/27]⎯

 FAIL  src/pages/__tests__/LoginPage.test.tsx > LoginPage > Rendering > should render login form with all elements
TestingLibraryElementError: Unable to find an accessible element with the role "heading" and name `/login/i`

Here are the accessible roles:

  img:

  Name "Scout AI":
  [36m<img[39m
    [33malt[39m=[32m"Scout AI"[39m
    [33mclass[39m=[32m"w-16 h-16 rounded-full object-cover shadow-lg mb-4"[39m
    [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
  [36m/>[39m

  --------------------------------------------------
  heading:

  Name "Scout AI":
  [36m<h1[39m
    [33mclass[39m=[32m"text-3xl font-bold text-sky-400 mb-2"[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-gray-400 text-center text-sm"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500 mt-4 text-center"[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Login":
  [36m<button[39m
    [33mclass[39m=[32m"w-full bg-sky-600 hover:bg-sky-700 text-white font-semibold py-2 px-4 rounded-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2 focus:ring-offset-gray-800"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-gray-200 p-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-gray-800 p-8 rounded-lg shadow-xl w-full max-w-md"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center mb-6"[39m
        [36m>[39m
          [36m<img[39m
            [33malt[39m=[32m"Scout AI"[39m
            [33mclass[39m=[32m"w-16 h-16 rounded-full object-cover shadow-lg mb-4"[39m
            [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
          [36m/>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"text-3xl font-bold text-sky-400 mb-2"[39m
          [36m>[39m
            [0mScout AI[0m
          [36m</h1>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-gray-400 text-center text-sm"[39m
          [36m>[39m
            [0mEnter your CompanyCam API Key to access Scout AI.[0m
          [36m</p>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"block text-sm font-medium text-gray-300 mb-1"[39m
            [33mfor[39m=[32m"apiKey"[39m
          [36m>[39m
            [0mCompanyCam API Key[0m
          [36m</label>[39m
          [36m<input[39m
            [33mclass[39m=[32m"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-gray-200 focus:outline-none focus:ring-2 focus:ring-sky-500 placeholder-gray-500"[39m
            [33mid[39m=[32m"apiKey"[39m
            [33mplaceholder[39m=[32m"Paste your API key here"[39m
            [33mtype[39m=[32m"password"[39m
            [33mvalue[39m=[32m""[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<button[39m
          [33mclass[39m=[32m"w-full bg-sky-600 hover:bg-sky-700 text-white font-semibold py-2 px-4 rounded-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2 focus:ring-offset-gray-800"[39m
        [36m>[39m
          [0mLogin[0m
        [36m</button>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-xs text-gray-500 mt-4 text-center"[39m
        [36m>[39m
          [0mYour API key will be stored locally in your browser.[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/pages/__tests__/LoginPage.test.tsx:55:21
     53|       renderLoginPage()
     54| 
     55|       expect(screen.getByRole('heading', { name: /login/i })).toBeInTh…
       |                     ^
     56|       expect(screen.getByText(/enter your companycam api key/i)).toBeI…
     57|       expect(screen.getByLabelText(/companycam api key/i)).toBeInTheDo…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/27]⎯

 FAIL  src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should analyze photos and create similarity groups
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/hooks/__tests__/useVisualSimilarity.test.tsx:252:51
    250| 
    251|     expect(result.current.state.progress).toBe(100);
    252|     expect(result.current.state.similarityGroups).toHaveLength(1);
       |                                                   ^
    253|     expect(mockBatchGenerateDescriptions).toHaveBeenCalledWith(mockPho…
    254|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/27]⎯

 FAIL  src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should clear analysis state
AssertionError: expected { isAnalyzing: false, …(6) } to deeply equal { isAnalyzing: false, …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[31m+   "allGroups": [],[39m
[2m    "error": null,[22m
[31m+   "filteredGroups": [],[39m
[2m    "isAnalyzing": false,[22m
[2m    "progress": 0,[22m
[2m    "similarityGroups": [],[22m
[2m    "similarityMatrix": Map {},[22m
[2m  }[22m

 ❯ src/hooks/__tests__/useVisualSimilarity.test.tsx:331:34
    329|     });
    330| 
    331|     expect(result.current.state).toEqual({
       |                                  ^
    332|       isAnalyzing: false,
    333|       progress: 0,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/27]⎯

 FAIL  src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get similarity score between photos
AssertionError: expected undefined to be 0.8 // Object.is equality

[32m- Expected:[39m 
0.8

[31m+ Received:[39m 
undefined

 ❯ src/hooks/__tests__/useVisualSimilarity.test.tsx:353:43
    351|     const similarity = result.current.getSimilarityScore('photo1', 'ph…
    352|     expect(similarity).toBeDefined();
    353|     expect(similarity?.overallSimilarity).toBe(0.8); // Updated to mat…
       |                                           ^
    354|   });
    355| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/27]⎯

 FAIL  src/hooks/__tests__/useVisualSimilarity.test.tsx > useVisualSimilarity > should get group for specific photo
AssertionError: Target cannot be null or undefined.
 ❯ src/hooks/__tests__/useVisualSimilarity.test.tsx:369:27
    367|     const group = result.current.getGroupForPhoto('photo1');
    368|     expect(group).toBeDefined();
    369|     expect(group?.photos).toHaveLength(2);
       |                           ^
    370|     expect(group?.groupType).toBe('retry_shots');
    371|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/27]⎯

 FAIL  src/components/__tests__/PhotoCard.test.tsx > PhotoCard > Basic rendering > should fallback to photo_url when no thumbnail URI available
Error: [2mexpect([22m[31melement[39m[2m).toHaveAttribute([22m[32m[32m"src"[32m[39m[2m, [22m[32m[32m"https://example.com/photo.jpg"[32m[39m[2m) // element.getAttribute("src") === "https://example.com/photo.jpg"[22m

Expected the element to have attribute:
[32m  src="https://example.com/photo.jpg"[39m
Received:
[31m  src="https://example.com/web.jpg"[39m
 ❯ src/components/__tests__/PhotoCard.test.tsx:136:21
    134| 
    135|       const image = screen.getByAltText('Roofing work in progress on r…
    136|       expect(image).toHaveAttribute('src', 'https://example.com/photo.…
       |                     ^
    137|     })
    138| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/27]⎯

 FAIL  src/components/__tests__/ScoutAiDemo.simple.test.tsx > ScoutAiDemo - Basic Functionality > Analysis Triggering > should call analyzeSimilarPhotos when trigger button clicked
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -90,6 +90,11 @@[90m
[2m          },[22m
[2m        ],[22m
[2m      },[22m
[2m    ],[22m
[2m    true,[22m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/components/__tests__/ScoutAiDemo.simple.test.tsx:126:55
    124|       });
    125| 
    126|       expect(mockScoutAiContext.analyzeSimilarPhotos).toHaveBeenCalled…
       |                                                       ^
    127|     });
    128| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/27]⎯

 FAIL  src/components/__tests__/ScoutAiDemo.simple.test.tsx > ScoutAiDemo - Basic Functionality > Insufficient Photos > should disable trigger button when less than 2 photos
TestingLibraryElementError: Unable to find an element with the text: Trigger Analysis. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"space-y-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<div>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
              [36m>[39m
                [0mScout AI[0m
              [36m</h3>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-sm text-blue-700"[39m
              [36m>[39m
                [0m1 photos loaded[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m""[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mNeed 2+ Photos[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-blue-700 text-sm"[39m
        [36m>[39m
          [0m💡 Load at least 2 photos to use Scout AI analysis[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/components/__tests__/ScoutAiDemo.simple.test.tsx:185:36
    183|       );
    184| 
    185|       const triggerButton = screen.getByText('Trigger Analysis');
       |                                    ^
    186|       expect(triggerButton).toBeDisabled();
    187|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/27]⎯

 FAIL  src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Demo Controls Display > should disable trigger button when less than 2 photos
TestingLibraryElementError: Unable to find an element with the text: Trigger Analysis. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"space-y-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-sm"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Scout AI"[39m
              [33mclass[39m=[32m"w-10 h-10 rounded-full object-cover shadow-sm"[39m
              [33msrc[39m=[32m"/src/assets/scout-ai-avatar3.png"[39m
            [36m/>[39m
            [36m<div>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"text-lg font-semibold text-blue-900"[39m
              [36m>[39m
                [0mScout AI[0m
              [36m</h3>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-sm text-blue-700"[39m
              [36m>[39m
                [0m1 photos loaded[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex items-center space-x-3"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m""[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"px-4 py-2 bg-gray-300 text-gray-500 text-sm font-medium rounded-md cursor-not-allowed"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mNeed 2+ Photos[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
        [36m<p[39m
          [33mclass[39m=[32m"text-blue-700 text-sm"[39m
        [36m>[39m
          [0m💡 Load at least 2 photos to use Scout AI analysis[0m
        [36m</p>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/components/__tests__/ScoutAiDemo.test.tsx:270:36
    268|       );
    269| 
    270|       const triggerButton = screen.getByText('Trigger Analysis');
       |                                    ^
    271|       expect(triggerButton).toBeDisabled();
    272|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/27]⎯

 FAIL  src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Manual Analysis Trigger > should call analyzeSimilarPhotos when trigger button clicked
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -150,6 +150,11 @@[90m
[2m          },[22m
[2m        ],[22m
[2m      },[22m
[2m    ],[22m
[2m    true,[22m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/components/__tests__/ScoutAiDemo.test.tsx:331:55
    329|       });
    330| 
    331|       expect(mockScoutAiContext.analyzeSimilarPhotos).toHaveBeenCalled…
       |                                                       ^
    332|     });
    333| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/27]⎯

 FAIL  src/components/__tests__/ScoutAiDemo.test.tsx > ScoutAiDemo > Console Logging > should log manual analysis trigger
AssertionError: expected "log" to be called with arguments: [ Array(1) ][90m

Received: 

[1m  1st log call:

[22m[2m  [[22m
[32m-   "[ScoutAiDemo] Manual analysis triggered",[90m
[31m+   "[ScoutAiDemo] Manual analysis triggered with options:",[90m
[31m+   {[90m
[31m+     "forceReanalysis": false,[90m
[31m+     "mode": "smart",[90m
[31m+     "newPhotoDays": 30,[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/components/__tests__/ScoutAiDemo.test.tsx:655:26
    653|       });
    654| 
    655|       expect(consoleSpy).toHaveBeenCalledWith('[ScoutAiDemo] Manual an…
       |                          ^
    656|     });
    657| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/27]⎯

 FAIL  src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should generate suggestions when similar photos are found
Error: [2mexpect([22m[31melement[39m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  1[39m
Received:
[31m  0[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/contexts/__tests__/ScoutAiContext.test.tsx:257:57
    255| 
    256|       await waitFor(() => {
    257|         expect(screen.getByTestId('suggestions-count')).toHaveTextCont…
       |                                                         ^
    258|       });
    259| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/27]⎯

 FAIL  src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > analyzeSimilarPhotos > should handle errors during analysis gracefully
Error: [2mexpect([22m[31melement[39m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  Analysis failed[39m
Received:
[31m  Cannot read properties of undefined (reading 'length')[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/contexts/__tests__/ScoutAiContext.test.tsx:277:45
    275| 
    276|       await waitFor(() => {
    277|         expect(screen.getByTestId('error')).toHaveTextContent('Analysi…
       |                                             ^
    278|         expect(screen.getByTestId('is-analyzing')).toHaveTextContent('…
    279|       });
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/27]⎯

 FAIL  src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > photo actions > should accept suggestions with photo actions
AssertionError: expected [] to have a length of 1 but got +0

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/contexts/__tests__/ScoutAiContext.test.tsx:473:42
    471|       // Wait for suggestion to be added
    472|       await waitFor(() => {
    473|         expect(contextValue.suggestions).toHaveLength(1);
       |                                          ^
    474|       });
    475| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/27]⎯

 FAIL  src/contexts/__tests__/ScoutAiContext.test.tsx > ScoutAiContext > error handling with photo actions > should handle partial failures in photo actions
AssertionError: expected [] to have a length of 1 but got +0

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"suggestions-count"[39m
        [36m>[39m
          [0m0[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"is-analyzing"[39m
        [36m>[39m
          [0midle[0m
        [36m</div>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"error"[39m
        [36m>[39m
          [0mCannot read properties of undefined (reading 'length')[0m
        [36m</div>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"analyze-button"[39m
        [36m>[39m
          [0mAnalyze Photos[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"accept-suggestion"[39m
        [36m>[39m
          [0mAccept Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"reject-suggestion"[39m
        [36m>[39m
          [0mReject Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"dismiss-suggestion"[39m
        [36m>[39m
          [0mDismiss Suggestion[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"archive-photo"[39m
        [36m>[39m
          [0mArchive Photo[0m
        [36m</button>[39m
        [36m<button[39m
          [33mdata-testid[39m=[32m"restore-photo"[39m
        [36m>[39m
          [0mRestore Photo[0m
        [36m</button>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/contexts/__tests__/ScoutAiContext.test.tsx:699:42
    697|       // Wait for suggestion to be added
    698|       await waitFor(() => {
    699|         expect(contextValue.suggestions).toHaveLength(1);
       |                                          ^
    700|       });
    701| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/27]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: localStorage unavailable
 ❯ Object.<anonymous> src/contexts/__tests__/UserContext.test.tsx:369:15
    367|     it('should handle localStorage throwing an error', async () => {
    368|       mockLocalStorage.getItem.mockImplementation(() => {
    369|         throw new Error('localStorage unavailable')
       |               ^
    370|       })
    371|       
 ❯ Object.mockCall node_modules/@vitest/spy/dist/index.js:89:15
 ❯ Object.spy [as getItem] node_modules/tinyspy/dist/index.js:47:103
 ❯ src/contexts/UserContext.tsx:77:44
 ❯ src/contexts/UserContext.tsx:144:5
 ❯ Object.react-stack-bottom-frame node_modules/react-dom/cjs/react-dom-client.development.js:23949:20
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ commitHookEffectListMount node_modules/react-dom/cjs/react-dom-client.development.js:11905:29
 ❯ commitHookPassiveMountEffects node_modules/react-dom/cjs/react-dom-client.development.js:12028:11
 ❯ commitPassiveMountOnFiber node_modules/react-dom/cjs/react-dom-client.development.js:13841:13

This error originated in "src/contexts/__tests__/UserContext.test.tsx" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should handle empty projects array". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: Suggestion not found: suggestion-1
 ❯ Object.acceptSuggestion src/contexts/ScoutAiContext.tsx:262:13
    260|     const suggestion = suggestions.find(s => s.id === suggestionId);
    261|     if (!suggestion) {
    262|       throw new Error(`Suggestion not found: ${suggestionId}`);
       |             ^
    263|     }
    264| 
 ❯ onClick src/contexts/__tests__/ScoutAiContext.test.tsx:100:32
 ❯ executeDispatch node_modules/react-dom/cjs/react-dom-client.development.js:16368:9
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ processDispatchQueue node_modules/react-dom/cjs/react-dom-client.development.js:16418:19
 ❯ node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
 ❯ batchedUpdates$1 node_modules/react-dom/cjs/react-dom-client.development.js:3262:40
 ❯ dispatchEventForPluginEventSystem node_modules/react-dom/cjs/react-dom-client.development.js:16572:7
 ❯ dispatchEvent node_modules/react-dom/cjs/react-dom-client.development.js:20658:11
 ❯ dispatchDiscreteEvent node_modules/react-dom/cjs/react-dom-client.development.js:20626:11

This error originated in "src/contexts/__tests__/ScoutAiContext.test.tsx" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should handle accepting suggestions". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  9 failed | 25 passed (34)
      Tests  27 failed | 599 passed (626)
     Errors  2 errors
   Start at  12:51:44
   Duration  5.51s (transform 1.17s, setup 2.14s, collect 4.20s, tests 9.92s, environment 9.44s, prepare 2.16s)

